{"version":3,"file":"routes.js","sources":["routes.js","../tao/controller/Lock/locked.js","../tao/controller/list/index.js","../tao/controller/login.js","../tao/controller/main.js","../tao/controller/passwordRecovery.js","../tao/controller/routes.js","../tao/controller/settings/extensionManager.js","../tao/controller/users/add.js","../tao/controller/users/disable-edit.js","../tao/controller/users/index.js"],"names":["define","Main","actions","index","getSectionActions","getSectionTrees","PasswordRecovery","Lock","locked","ExtensionsManager","Lists","Users","deps","add","$","__","helpers","sectionApi","feedback","start","click","e","preventDefault","ajax","url","_url","type","data","uri","this","dataType","success","response","trigger","error","_addSquareBtn","title","icon","$listToolBar","$btn","class","append","saveUrl","delListUrl","delEltUrl","$listSaveBtn","$listNewBtn","$listContainer","$listForm","find","$listTitleBar","length","wrapInner","$labelEdit","text","html","replaceWith","attr","elementList","addClass","prepend","sortable","axis","opacity","placeholder","tolerance","update","map","each","id","newName","replace","on","postJson","closest","serializeArray","saved","_load","getMainContainerSelector","level","children","confirm","element","parent","deleted","remove","$list","parents","module","versionWarning","conf","context","$fields","init","eq","focus","message","value","config","uiForm","section","treeFactory","sectionHeight","loadingBar","nav","search","$doc","document","ajaxSend","ajaxComplete","stop","window","scrollTo","panel","$treeElt","$actionBar","rootNode","treeUrl","root_url","treeActions","key","val","getBy","test","serverParameters","extension","shownExtension","perspective","shownStructure","classUri","undefined","setHeights","show","loadContentBlock","feedbackType","getDependencies","dependencies","ext","push","concat","getUnique","orig","a","i","inArray","progressConsole","msg","prop","scrollTop","installNextExtension","toInstall","indexCurrentToInstall","loaded","slideUp","$tr","appendTo","hide","$orig","slideDown","styleTables","noAvailableExtensions","animate","width","percentByExt","hasNextExtensionToInstall","installError","info","postInstall","backgroundColor","done","setTimeout","location","reload","removeClass","$noAvailableExtElement","empty","ext_installed","event","stopPropagation","$installButton","split","join","dialog","modal","height","buttons","alert","users","checkLogin","loginId","exit","structure","get","disable","editUser","enable","removeUser","datatable","$userList","edit","model","label"],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'controller/main',\n                'getSectionActions' : 'controller/main/actions',\n                'getSectionTrees' : 'controller/main/trees'\n            }\n        },\n        'PasswordRecovery': {\n            'actions' : {\n                'index' : 'controller/passwordRecovery'\n            },\n        },\n        'Lock': {\n            'actions' : {\n                'locked' : 'controller/Lock/locked'\n            }\n        },\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index'\n            }\n        },\n        'Users' : {\n            'deps' : 'controller/users/disable-edit',\n            'actions' : {\n                'index' : 'controller/users/index',\n                'add'   : 'controller/users/add'\n            }\n        }\n    };\n});\n\n","define('tao/controller/Lock/locked',['jquery', 'i18n', 'helpers', 'lock', 'layout/section', 'ui/feedback'], \nfunction($, __, helpers, Lock, sectionApi, feedback){\n    'use strict';\n\t\n    return {\n        start : function(){\n\n\t\t    $(\".forcerelease\").click(function(e) {\n\t\t    \t\n\t\t        e.preventDefault();\n\t\t        \n\t\t        $.ajax({\n                    url: helpers._url('forceRelease', 'Lock', 'tao'),\n                    type: \"POST\",\n                    data : {uri : $(this).data('id')},\n                    dataType: 'json',\n                    success : function(response){\n                        if(response.success){\n        \t\t            feedback().success(__('The lock has been released'));\n                            $('.tree').trigger('refresh.taotree'); \n                        }\n                        else{\n        \t\t            feedback().error(__('Unable to release the lock'));\n                        }\n                    },\n                    error : function(){\n    \t\t            feedback().error(__('Unable to release the lock'));\n                    }\n                });\n\t\t        \n\t\t    });\n        }\n    }\n});\n","define('tao/controller/list/index',['jquery', 'i18n', 'helpers', 'ui/feedback'], function ($, __, helpers, feedback) {\n    'use strict';\n\n    function _addSquareBtn(title, icon, $listToolBar) {\n        var $btn = $('<button>', { 'class': 'btn-info small lft ' +  'icon-'+ icon, title: __(title) });\n        $listToolBar.append($btn);\n        return $btn;\n    }\n\n    return {\n\n        start: function () {\n\n            var saveUrl = helpers._url('saveLists', 'Lists', 'tao');\n            var delListUrl = helpers._url('removeList', 'Lists', 'tao');\n            var delEltUrl = helpers._url('removeListElement', 'Lists', 'tao');\n\n            $(\".list-edit-btn\").click(function () {\n                var $btn = $(this),\n                    uri = $btn.data('uri'),\n                    $listContainer = $(\"#list-data_\" + uri ),\n                // form must be on the inside rather than on the outside as it has been in 2.6\n                    $listForm     = $listContainer.find('form'),\n                    $listTitleBar = $listContainer.find('.container-title h6'),\n                    $listToolBar  = $listContainer.find('.data-container-footer'),\n                    $listSaveBtn,\n                    $listNewBtn;\n\n                if (!$listForm.length) {\n\n                    $listForm = $('<form>');\n                    $listContainer.wrapInner($listForm);\n                    $listContainer.find('form').append('<input type=\"hidden\" name=\"uri\" value=\"' + uri + '\" />');\n\n                    var $labelEdit = $(\"<input type='text' name='label' value='\" + $listTitleBar.text() + \"'/>\");\n                    $listTitleBar.html($labelEdit);\n\n                    if ($listContainer.find('.list-element').length) {\n                        $listContainer.find('.list-element').replaceWith(function () {\n                            return \"<input type='text' name='\" + $(this).attr('id') + \"' value='\" + $(this).text() + \"' />\";\n                        });\n                    }\n\n                    var elementList = $listContainer.find('ol');\n                    elementList.addClass('sortable-list');\n                    elementList.find('li').prepend('<span class=\"icon-grip\" ></span>');\n                    elementList.find('li').append('<span class=\"icon-checkbox-crossed list-element-delete-btn\" style=\"cursor:pointer;\" ></span>');\n\n                    elementList.sortable({\n                        axis: 'y',\n                        opacity: 0.6,\n                        placeholder: 'ui-state-error',\n                        tolerance: 'pointer',\n                        update: function (event, ui) {\n                            var map = {};\n                            $.each($(this).sortable('toArray'), function (index, id) {\n                                map[id] = 'list-element_' + (index + 1);\n                            });\n                            $(this).find('li').each(function () {\n                                var id = $(this).attr('id');\n                                if (map[id]) {\n                                    $(this).attr('id', map[id]);\n                                    var newName = $(this).find('input').attr('name').replace(id, map[id]);\n                                    $(this).find('input').attr('name', newName);\n                                }\n                            });\n                        }\n                    });\n\n                    $listSaveBtn = _addSquareBtn('Save element', 'save', $listToolBar);\n                    $listSaveBtn.on('click', function () {\n                        $.postJson(\n                            saveUrl,\n                            $(this).closest('form').serializeArray(),\n                            function (response) {\n                                if (response.saved) {\n                                    feedback().success(__('\"list saved\"'));\n                                    helpers._load(helpers.getMainContainerSelector(), helpers._url('index', 'Lists', 'tao'));\n                                }else{\n                                    feedback().error(__('List not saved'));\n                                }\n                            }\n                        );\n                        return false;\n                    });\n\n                    $listNewBtn = _addSquareBtn('New element', 'add', $listToolBar);\n                    $listNewBtn.click(function () {\n                        var level = $(this).closest('form').find('ol').children().length + 1;\n                        $(this).closest('form').find('ol').append(\n                            \"<li id='list-element_\" + level + \"'>\" +\n                            \"<span class='icon-grip' ></span>\" +\n                            \"<input type='text' name='list-element_\" + level + \"_' />\" +\n                            \"<span class='icon-add list-element-delete-btn' ></span>\" +\n                            \"</li>\");\n                        return false;\n                    });\n                }\n\n                $(\".list-element-delete-btn\").click(function () {\n                    var $btn = $(this),\n                        uri = $btn.data('uri');\n                    if (confirm(__(\"Please confirm you want to delete this list element.\"))) {\n                        var element = $(this).parent();\n                        uri = element.find('input:text').attr('name').replace(/^list\\-element\\_([1-9]*)\\_/, '');\n                        $.postJson(\n                            delEltUrl,\n                            {uri: uri},\n                            function (response) {\n                                if (response.deleted) {\n                                    element.remove();\n                                    feedback().success(__('Element deleted'));\n                                }else{\n                                    feedback().error(__('Element not deleted'));\n                                }\n                            }\n                        );\n                    }\n                });\n            });\n\n            $('.list-delete-btn').click(function () {\n                if (confirm(__(\"Please confirm you want to delete this list. This operation cannot be undone.\"))) {\n                    var $btn = $(this),\n                        uri = $btn.data('uri'),\n                        $list = $(this).parents(\".data-container\");\n                    $.postJson(\n                        delListUrl,\n                        {uri: uri},\n                        function (response) {\n                            if (response.deleted) {\n                                feedback().success(__('List deleted'));\n                                $list.remove();\n                            }else{\n                                feedback().error(__('List not deleted'));\n                            }\n                        }\n                    );\n                }\n            });\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * The controller dedicated to the login page.\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/login',[\n    'jquery',\n    'i18n',\n    'module',\n    'ui/feedback',\n    'layout/version-warning'\n], function ($, __, module, feedback,  versionWarning) {\n    'use strict';\n\n    var conf, type, context = $('.entry-pages-container'), $fields = $();\n\n    versionWarning.init();\n\n    $('input[type=\"text\"]').eq(0).focus();\n\n    // empty $fields sent\n    if(context.find('.form-error').length){\n        conf = {\n            message: {\n                error: __('All fields are required')\n            }\n        };\n        context.find(':input').each(function() {\n            if(!this.value) {\n                $fields = $fields.add($(this));\n            }\n        });\n    }\n    // if the module config contains a message object\n    else {\n        conf = module.config();\n    }\n\n    // any error/info creates feedback\n    if (conf.message) {\n        $fields = context.find(':input');\n        for (type in conf.message) {\n            if (!conf.message[type]) {\n                continue;\n            }\n            feedback()[type](conf.message[type]);\n            $fields.addClass(type);\n        }\n    }\n\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/main',[\n    'jquery',\n    'i18n',\n    'context',\n    'helpers',\n    'uiForm',\n    'layout/section',\n    'layout/actions',\n    'layout/tree',\n    'layout/version-warning',\n    'layout/section-height',\n    'layout/loading-bar',\n    'layout/nav',\n    'layout/search'\n],\nfunction ($, __, context, helpers, uiForm, section, actions, treeFactory, versionWarning, sectionHeight, loadingBar, nav, search) {\n    'use strict';\n\n    /**\n     * This controller initialize all the layout components used by the backend : sections, actions, tree, loader, etc.\n     * @exports tao/controller/main\n     */\n    return {\n        start : function(){\n\n            var $doc = $(document);\n\n            versionWarning.init();\n\n            //just before an ajax request\n            $doc.ajaxSend(function () {\n                loadingBar.start();\n            });\n\n            //when an ajax request complete\n            $doc.ajaxComplete(function () {\n                loadingBar.stop();\n            });\n\n            //navigation bindings\n            nav.init();\n\n            //search component\n            search.init();\n\n            //initialize sections \n            section.on('activate', function(section){\n\n                window.scrollTo(0,0);\n\n                // quick work around issue in IE11\n                // IE randomly thinks there is no id and throws an error\n                // I know it's not logical but with this 'fix' everything works fine\n                if(!section || !section.id) {\n                    return;\n                }\n\n                context.section = section.id;\n               \n                //initialize actions \n                actions.init(section.panel);\n\n                switch(section.type){\n                case 'tree':\n                    section.panel.addClass('content-panel');\n                    sectionHeight.init(section.panel);\n\n                    //set up the tree\n                    $('.taotree', section.panel).each(function(){\n                        var $treeElt = $(this),\n                            $actionBar = $('.tree-action-bar-box', section.panel);\n\n                        var rootNode = $treeElt.data('rootnode');\n                        var treeUrl = context.root_url;\n                        var treeActions = {};\n                        $.each($treeElt.data('actions'), function (key, val) {\n                            if (actions.getBy(val)) {\n                                treeActions[key] = val;\n                            }\n                        });\n                        \n                        if(/\\/$/.test(treeUrl)){\n                            treeUrl += $treeElt.data('url').replace(/^\\//, '');\n                        } else {\n                            treeUrl += $treeElt.data('url');\n                        }\n                        treeFactory($treeElt, treeUrl, {\n                            serverParameters : {\n                                extension    : context.shownExtension,\n                                perspective  : context.shownStructure,\n                                section      : context.section,\n                                classUri     : rootNode ? rootNode : undefined\n                            },\n                            actions : treeActions\n                        });\n                        $treeElt.on('ready.taotree', function() {\n                            $actionBar.addClass('active');\n                            sectionHeight.setHeights(section.panel);\n                        });\n                    });\n\n                    $('.navi-container', section.panel).show();\n                    break;\n                case 'content' : \n\n                    //or load the content block\n                    this.loadContentBlock();\n                    \n                    break;\n                }\n            })\n            .init();\n\n\n            //initialize legacy components\n            helpers.init();\n            uiForm.init();\n        }\n    };\n});\n\n\n","/**  \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n * \n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *               \n */\n\n/**\n * Recovery password page controller\n * @author Aleh Hutnikau <hutnikau@1pt.com>\n */\ndefine('tao/controller/passwordRecovery',[\n    'jquery',\n    'i18n',\n    'module',\n    'ui/feedback',\n    'layout/version-warning'\n], function ($, __, module, feedback,  versionWarning) {\n    'use strict';\n    var conf = module.config(),\n        feedbackType;\n\n    versionWarning.init();\n    if (conf.message) {\n        for (feedbackType in conf.message) {\n            if (conf.message[feedbackType]) {\n                feedback()[feedbackType](conf.message[feedbackType]);\n            }\n        }\n    }\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('tao/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'controller/main',\n                'getSectionActions' : 'controller/main/actions',\n                'getSectionTrees' : 'controller/main/trees'\n            }\n        },\n        'PasswordRecovery': {\n            'actions' : {\n                'index' : 'controller/passwordRecovery'\n            },\n        },\n        'Lock': {\n            'actions' : {\n                'locked' : 'controller/Lock/locked'\n            }\n        },\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index'\n            }\n        },\n        'Users' : {\n            'deps' : 'controller/users/disable-edit',\n            'actions' : {\n                'index' : 'controller/users/index',\n                'add'   : 'controller/users/add'\n            }\n        }\n    };\n});\n\n","define('tao/controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers', 'ui/feedback'], function($, __, context, helpers, feedback){\n\n    var ext_installed = [];\n    var toInstall = [];\n    var indexCurrentToInstall = -1;\n    var percentByExt = 0;\n    var installError = 0;\n\n    function getDependencies(extension) {\n            var dependencies = [];\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\n                    var ext = $(this).attr('rel');\n                    var deps = getDependencies(ext);\n                    deps.push(ext);\n                    dependencies = dependencies.concat(deps);\n            });\n            return dependencies;\n    }\n\n    //Give an array with unique values\n    function getUnique(orig){\n            var a = [];\n            for (var i = 0; i < orig.length; i++) {\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\n            }\n            return a;\n    }\n\n    function progressConsole(msg) {\n            $('#installProgress .console').append('<p>' + msg + '</p>');\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\n    }\n\n    function installNextExtension() {\n            var ext = toInstall[indexCurrentToInstall];\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\n            $.ajax({\n                    type: \"POST\",\n                    url: helpers._url('install', 'ExtensionsManager', 'tao'),\n                    data: 'id='+ext,\n                    dataType: 'json',\n                    success: function(data) {\n                            helpers.loaded();\n                            if (data.success) {\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\n\n                                    // state that the extension is install in remaining dependencies.\n                                    $('li.ext-id.ext-' + ext).addClass('installed');\n\n                                    $('tr#'+ext).slideUp('normal', function() {\n                                            var $tr = $('<tr></tr>').appendTo($('#extensions-manager-container tbody')).hide();\n                                            var $orig = $('tr#' + ext + ' td');\n                                            $tr.append('<td class=\"ext-id bordered\">' + $($orig[0]).text() + '</td>');\n                                            $tr.append('<td class=\"author\">' + $($orig[1]).text() + '</td>');\n                                            $tr.append('<td class=\"version\">' + $($orig[2]).text() + '</td>');\n                                            $tr.slideDown('normal', function() {\n                                                    $('tr#' + ext).remove();\n\n                                                    // table changed, restyle.\n                                                    styleTables();\n\n                                                    // If the available extensions table is empty,\n                                                    // just inform the user.\n                                                    if ($('#available-extensions-container table tbody tr').length == 0){\n                                                            noAvailableExtensions();\n                                                    }\n\n                                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\n                                                            //Next\n                                                            indexCurrentToInstall++;\n                                                            hasNextExtensionToInstall();\n                                                    });\n                                            });\n                                    });\n                            } else {\n                                    installError = 1;\n                                    progressConsole('Installation of ' + ext + ' failed');\n                            }\n                            feedback().info(data.message);\n                    }\n            });\n\n            if (installError) {\n                    progressConsole(__('A fatal error occured during the installation process.'));\n            }\n    }\n\n    function postInstall(){\n        progressConsole(__('Post install processing'));\n        return $.ajax({\n            type: \"GET\",\n            url: helpers._url('postInstall', 'ExtensionsManager', 'tao')\n        });\n    }\n\n    function hasNextExtensionToInstall() {\n            if (indexCurrentToInstall >= toInstall.length) {\n                toInstall = [];\n                $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\n\n                postInstall().done(function(data) {\n                    helpers.loaded();\n                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\n                    $('#installProgress p.status').text(__('Installation done.'));\n                    progressConsole(__('> Installation done.'));\n                    progressConsole(__('... reloading page.'));\n\n                    setTimeout(function(){\n                        window.location.reload(true);\n                    }, 1000);\n                });\n            } else {\n                installNextExtension();\n            }\n    }\n\n    function styleTables(){\n            // Clean all to make this function able to \"restyle\" after\n            // data refresh.\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\n                                                                             .removeClass('extensionEven');\n\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\n    }\n\n    function noAvailableExtensions(){\n            var $noAvailableExtElement = $('<div/>');\n            $noAvailableExtElement.attr('id', 'noExtensions')\n                                                      .addClass('ui-state-highlight')\n                                                      .text(__('No extensions available.'));\n\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\n    }\n    \n    return {\n        start : function(){\n            \n            // Table styling.\n            styleTables();\n\n            $('#installProgress').hide();\n\n            //Detect wich extension is already installed\n            $('#extensions-manager-container .ext-id').each(function() {\n                    var ext = $(this).text();\n                    ext_installed.push(ext);\n                    $('.ext-id.ext-' + ext).addClass('installed');\n            });\n\n            $('#available-extensions-container tr input').click(function(event){\n                    event.stopPropagation();\n            });\n\n            $('#available-extensions-container tr input:checkbox').click(function() {\n                    var $installButton = $('#installButton');\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\n                            $installButton.attr('disabled', false);\n                    }\n                    else{\n                            $installButton.attr('disabled', true);\n                    }\n            });\n\n            $('#available-extensions-container #installButton').click(function(event) {\n                    //Prepare the list of extension to install in the order of dependency\n                    toInstall = [];\n                    $('#available-extensions-container input:checked').each(function() {\n                            var ext = $(this).prop('name').split('_')[1];\n                            var deps = getDependencies(ext);\n                            if (deps.length) {\n                                toInstall = toInstall.concat(deps);\n                            }\n                            toInstall.push(ext);\n                    });\n                    toInstall = getUnique(toInstall);\n                    if (!toInstall.length) {\n                            window.alert(__('Nothing to install !'));\n                            return false;\n                    }\n                    //Let's go\n                    percentByExt = 100 / toInstall.length;\n\n                    //Show the dialog with the result\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\n                    $('#installProgress .bar').width(0);\n                    $('#installProgress .console').empty();\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\n                    $('#installProgress').dialog({\n                            modal: true,\n                            width: 400,\n                            height: 300,\n                            buttons: [{\n                                text: __('No'),\n                                click: function() {\n                                        $(this).dialog('close');\n                                }\n                            },{\n                                    text: __('Yes'),\n                                    click: function() {\n                                            //Run the install one by one\n                                            progressConsole(__('Preparing installation...'));\n                                            $('.ui-dialog-buttonpane').remove();\n                                            installError = 0;\n                                            indexCurrentToInstall = 0;\n                                            installNextExtension();\n                                    }\n                                }]\n                    });\n                    event.preventDefault();\n            });\n        }\n    };\n\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/users/add',['jquery', 'module', 'helpers', 'users'], function($, module, helpers, users) {\n    'use strict';\n       \n    \n    /**\n     * The user add controller\n     * @exports controller/users/add\n     */    \n    return {\n        start : function(){\n            var conf = module.config();\n            var url  = helpers._url('checkLogin', 'Users', 'tao');\n            users.checkLogin(conf.loginId, url);\n            \n            if(conf.exit === true){\n\n                setTimeout(function(){\n                    //TODO would be better to clean up the form and switch the section\n                    window.location = helpers._url('index', 'Main', 'tao', {structure: 'users', ext : 'tao', section : 'list_users'});\n                }, 1000);\n            }\n        }\n    };\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/users/disable-edit',['layout/section'], function(section) {\n    'use strict';\n       \n    /**\n     * Ensure edit section is disabled\n     * @exports controller/users/disable-edit\n     */    \n    return {\n        start : function(){\n            section.get('edit_user').disable();\n        }\n    };\n});\n\n","/**\n * @author Jérôme Bogaert <jerome@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/users/index',['jquery', 'i18n', 'helpers', 'layout/section', 'ui/feedback', 'ui/datatable'], function($, __, helpers, section, feedback) {\n    'use strict';\n\n    /**\n     * Edit a user (shows the edit section)\n     * @param {String} uri - the user uri\n     */\n    var editUser = function editUser(uri) {\n        section\n            .get('edit_user')\n            .enable()\n            .loadContentBlock(helpers._url('edit', 'Users', 'tao'), {uri : uri})\n            .show();\n    };\n\n    /**\n     * Removes a user\n     * @param {String} uri - the user uri\n     */\n\tvar removeUser = function removeUser(uri){\n        //TODO use a confirm component\n        if (window.confirm(__('Please confirm user deletion'))) {\n            $.ajax({\n                url : helpers._url('delete', 'Users', 'tao'),\n                data:  {uri : uri},\n                type : 'POST'\n            }).done(function(response){\n                if(response.deleted){\n                    feedback().success(response.message);\n                } else {\n                    feedback().error(response.message);\n                }\n                $('#user-list').datatable('refresh');\n            });\n        }\n\t};\n\n    /**\n     * The user index controller\n     * @exports controller/users/index\n     */\n    return {\n        start : function(){\n            var $userList = $('#user-list');\n    \n            section.on('show', function(section){\n                if(section.id === 'list_users'){\n                    $userList.datatable('refresh');\n                }\n\n            });\n\n            //initialize the user manager component\n            $userList.datatable({\n                'url': helpers._url('data', 'Users', 'tao'),\n                'actions' : {\n                    'edit': editUser,\n                    'remove': removeUser\n                },\n                'model' : [\n                    {\n                        id : 'login',\n                        label : __('Login'),\n                        sortable : true\n                    },{\n                        id : 'name',\n                        label : __('Name'),\n                        sortable : true\n                    },\n                    {\n                        id : 'email',\n                        label : __('Email'),\n                        sortable : true\n                    },{\n                        id : 'role',\n                        label : __('Roles'),\n                        sortable : false\n                    },{\n                        id : 'dataLg',\n                        label : __('Data Language'),\n                        sortable : true\n                    },{\n                        id: 'guiLg',\n                        label : __('Interface Language'),\n                        sortable : true\n                    }\n                ]\n            });\n        }\n    };\n});\n\n"]}