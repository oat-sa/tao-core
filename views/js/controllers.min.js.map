{"version":3,"sources":["routes.js","app.js","entry.js","Lock/locked.js","main.js","passwordRecovery.js","settings/extensionManager.js","users/add.js","users/disable-edit.js","users/index.js"],"names":["define","Main","actions","index","entry","getSectionActions","getSectionTrees","login","PasswordRecovery","Lock","locked","ExtensionsManager","Users","deps","add","_","$","historyRouterFactory","loggerFactory","eventifier","statifier","urlUtil","feedback","logoutEvent","historyRouter","redirectUrl","appLogger","appController","start","options","currentRoute","apply","forwardTo","window","location","forward","selector","target","document","off","on","e","$elt","href","preventDefault","this","attr","redirect","getRouter","getLogger","onError","err","message","error","code","defaults","url","setState","trigger","__","$container","errorMessage","data","helpers","sectionApi","click","ajax","_url","type","uri","dataType","success","response","context","uiForm","section","treeFactory","versionWarning","sectionHeight","loadingBar","nav","search","$doc","init","ajaxSend","ajaxComplete","stop","scrollTo","id","panel","addClass","each","$treeElt","$actionBar","rootNode","treeUrl","root_url","treeActions","key","val","getBy","test","replace","serverParameters","extension","shownExtension","perspective","shownStructure","classUri","undefined","setHeights","show","loadContentBlock","module","feedbackType","conf","config","getDependencies","dependencies","ext","push","concat","getUnique","orig","a","i","length","inArray","progressConsole","msg","append","prop","scrollTop","installNextExtension","toInstall","indexCurrentToInstall","text","loaded","slideUp","$tr","appendTo","hide","$orig","slideDown","remove","styleTables","noAvailableExtensions","animate","width","percentByExt","hasNextExtensionToInstall","installError","info","postInstall","backgroundColor","done","setTimeout","reload","removeClass","$noAvailableExtElement","empty","ext_installed","event","stopPropagation","$installButton","parent","find","split","join","dialog","modal","height","buttons","alert","users","checkLogin","loginId","exit","structure","get","disable","editUser","enable","removeUser","confirm","deleted","datatable","$userList","filter","edit","model","label","sortable"],"mappings":"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","file":"routes.js.map","sourcesContent":["/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n * \r\n * \r\n */\r\n\r\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\r\ndefine('controller/routes',[],function(){\r\n    'use strict';\r\n\r\n    return {\r\n        'Main': {\r\n            'actions' : {\r\n                'index' : 'controller/main',\r\n                'entry' : 'controller/entry',\r\n                'getSectionActions' : 'controller/main/actions',\r\n                'getSectionTrees' : 'controller/main/trees',\r\n                'login' : 'controller/login'\r\n            }\r\n        },\r\n        'PasswordRecovery': {\r\n            'actions' : {\r\n                'index' : 'controller/passwordRecovery'\r\n            },\r\n        },\r\n        'Lock': {\r\n            'actions' : {\r\n                'locked' : 'controller/Lock/locked'\r\n            }\r\n        },\r\n        'ExtensionsManager' : {\r\n            'actions' : {\r\n                'index' : 'controller/settings/extensionManager'\r\n            }\r\n        },\r\n        'Users' : {\r\n            'deps' : 'controller/users/disable-edit',\r\n            'actions' : {\r\n                'index' : 'controller/users/index',\r\n                'add'   : 'controller/users/add'\r\n            }\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\r\n */\r\n/**\r\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\r\n */\r\ndefine('controller/app',[\r\n    'lodash',\r\n    'jquery',\r\n    'core/historyRouter',\r\n    'core/logger',\r\n    'core/eventifier',\r\n    'core/statifier',\r\n    'util/url',\r\n    'ui/feedback',\r\n    'layout/logout-event'\r\n], function (_, $, historyRouterFactory, loggerFactory, eventifier, statifier, urlUtil, feedback, logoutEvent) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Shared router that will manage the page for each controller\r\n     * @type {historyRouter}\r\n     */\r\n    var historyRouter;\r\n\r\n    /**\r\n     *\r\n     */\r\n    var redirectUrl;\r\n\r\n    /**\r\n     * Creates a logger for the app\r\n     * @type {logger}\r\n     */\r\n    var appLogger = loggerFactory('controller/app');\r\n\r\n    /**\r\n     * Defines an application controller that will manage the routes through the history.\r\n     * It will start by dispatching the current location, in order to keep history consistency.\r\n     * To properly use this application controller you need to take care of it in each controller\r\n     * that is intended to be routed through the history. See samples below.\r\n     *\r\n     * @example\r\n     *  // Defines a controller that is routable through the history\r\n     *  return {\r\n     *      // Will be called each time the history routes the action to this controller\r\n     *      start: function start() {\r\n     *          // Take care of the application controller by applying a hook on each routable links\r\n     *          return appController.apply('.link');\r\n     *\r\n     *          // You can also be notified of a change in the route,\r\n     *          // and release some resources as this controller will be destroyed.\r\n     *          // Pay attention to the event namespace, it must be unique.\r\n     *          appController.on('change.myController', function() {\r\n     *              // Release the event, as this controller will be destroyed\r\n     *              appController.off('change.myController');\r\n     *\r\n     *              // Release resources\r\n     *              ...\r\n     *          });\r\n     *\r\n     *          // Do the stuff of the controller\r\n     *          ...\r\n     *\r\n     *          // If you need to change the current route you can rely on the router brought by the appController\r\n     *          appController.getRouter().redirect(url);\r\n     *  };\r\n     *\r\n     * @typedef {appController}\r\n     */\r\n    var appController = eventifier(statifier({\r\n        /**\r\n         * App controller entry point: set up the router.\r\n         * @param {Object} options\r\n         * @param {String} [options.forwardTo] - an optional route of a client controller to forward\r\n         * @param {String} [options.redirectUrl] - an optional url to redirect client on authorisation errors\r\n         */\r\n        start: function start(options){\r\n            var currentRoute;\r\n\r\n            // all links that are tagged with the \"router\" class are dispatched using the history router\r\n            appController.apply();\r\n\r\n            // dispatch the current route\r\n            if (options && options.forwardTo) {\r\n                currentRoute = options.forwardTo;\r\n            } else {\r\n                currentRoute = window.location + '';\r\n            }\r\n\r\n            if (options && options.redirectUrl) {\r\n                redirectUrl = options.redirectUrl || {};\r\n            }\r\n            historyRouter.forward(currentRoute);\r\n        },\r\n\r\n        /**\r\n         * Catch all links below the target, when they have the provided selector,\r\n         * then dispatch them using the history router.\r\n         * @param {String} [selector] - The CSS signature of links to catch (default: \".router\")\r\n         * @param {String|HTMLElement|jQuery} [target] - The container from which catch links (default: document)\r\n         * @returns {appController}\r\n         */\r\n        apply: function apply(selector, target) {\r\n            selector = selector || '.router';\r\n            target = target || document;\r\n\r\n            $(target).off('click.appController').on('click.appController', selector, function (e) {\r\n                var $elt, href;\r\n\r\n                // prevent the browser to actually change the page from this link\r\n                e.preventDefault();\r\n\r\n                // try to get the target of the link\r\n                $elt = $(this);\r\n                href = $elt.attr('href');\r\n                if (!href) {\r\n                    href = $('[href]:first-child', $elt).attr('href');\r\n                }\r\n\r\n                // use the history router to change the current view\r\n                // the called controller will have in charge to get the data and update the view accordingly\r\n                if (href) {\r\n                    historyRouter.redirect(href);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Exposes the router so other controllers can dispatch a route\r\n         *\r\n         * @returns {router} the router\r\n         */\r\n        getRouter: function getRouter() {\r\n            return historyRouter;\r\n        },\r\n\r\n        /**\r\n         * Exposes the logger so other controllers can log application level events\r\n         *\r\n         * @returns {logger} the router\r\n         */\r\n        getLogger: function getLogger() {\r\n            return appLogger;\r\n        },\r\n\r\n        /**\r\n         * Catches errors\r\n         * @param {Object} err\r\n         * @returns {appController}\r\n         */\r\n        onError: function onError(err) {\r\n            var message = err && err.message || err;\r\n            var options = {message: message};\r\n\r\n            appLogger.error(err);\r\n            if (err.code === 403){\r\n                options = _.defaults(options, redirectUrl ||  {});\r\n                logoutEvent(options);\r\n            }else{\r\n                feedback().error(message);\r\n            }\r\n            return this;\r\n        }\r\n    }));\r\n\r\n    // setup the history router\r\n    historyRouter = historyRouterFactory()\r\n        .on('dispatching', function (url) {\r\n            appController.setState('dispatching');\r\n            appController.trigger('change', url);\r\n        })\r\n        .on('dispatched', function (url) {\r\n            appController.setState('dispatching', false);\r\n            appController.trigger('started', url);\r\n        });\r\n\r\n    return appController;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\r\n */\r\n\r\ndefine('controller/entry',[\r\n    'jquery',\r\n    'lodash',\r\n    'i18n',\r\n    'ui/feedback'\r\n], function ($, _, __, feedback) {\r\n    'use strict';\r\n\r\n    /**\r\n     * The login controller\r\n     */\r\n    return {\r\n\r\n        /**\r\n         * Controller entry point\r\n         */\r\n        start: function start() {\r\n            var $container = $('#entry-point-box');\r\n            var errorMessage = $container.data('errormessage');\r\n            if (errorMessage) {\r\n                feedback().error(errorMessage);\r\n            }\r\n        }\r\n    };\r\n});\n","define('controller/Lock/locked',['jquery', 'i18n', 'helpers', 'lock', 'layout/section', 'ui/feedback'], \r\nfunction($, __, helpers, Lock, sectionApi, feedback){\r\n    'use strict';\r\n\t\r\n    return {\r\n        start : function(){\r\n\r\n\t\t    $(\".forcerelease\").click(function(e) {\r\n\t\t    \t\r\n\t\t        e.preventDefault();\r\n\t\t        \r\n\t\t        $.ajax({\r\n                    url: helpers._url('forceRelease', 'Lock', 'tao'),\r\n                    type: \"POST\",\r\n                    data : {uri : $(this).data('id')},\r\n                    dataType: 'json',\r\n                    success : function(response){\r\n                        if(response.success){\r\n        \t\t            feedback().success(__('The lock has been released'));\r\n                            $('.tree').trigger('refresh.taotree'); \r\n                        }\r\n                        else{\r\n        \t\t            feedback().error(__('Unable to release the lock'));\r\n                        }\r\n                    },\r\n                    error : function(){\r\n    \t\t            feedback().error(__('Unable to release the lock'));\r\n                    }\r\n                });\r\n\t\t        \r\n\t\t    });\r\n        }\r\n    }\r\n});\n","/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/main',[\r\n    'jquery',\r\n    'i18n',\r\n    'context',\r\n    'helpers',\r\n    'uiForm',\r\n    'layout/section',\r\n    'layout/actions',\r\n    'layout/tree',\r\n    'layout/version-warning',\r\n    'layout/section-height',\r\n    'layout/loading-bar',\r\n    'layout/nav',\r\n    'layout/search'\r\n],\r\nfunction ($, __, context, helpers, uiForm, section, actions, treeFactory, versionWarning, sectionHeight, loadingBar, nav, search) {\r\n    'use strict';\r\n\r\n    /**\r\n     * This controller initialize all the layout components used by the backend : sections, actions, tree, loader, etc.\r\n     * @exports tao/controller/main\r\n     */\r\n    return {\r\n        start : function(){\r\n\r\n            var $doc = $(document);\r\n\r\n            versionWarning.init();\r\n\r\n            //just before an ajax request\r\n            $doc.ajaxSend(function () {\r\n                loadingBar.start();\r\n            });\r\n\r\n            //when an ajax request complete\r\n            $doc.ajaxComplete(function () {\r\n                loadingBar.stop();\r\n            });\r\n\r\n            //navigation bindings\r\n            nav.init();\r\n\r\n            //search component\r\n            search.init();\r\n\r\n            //initialize sections \r\n            section.on('activate', function(section){\r\n\r\n                window.scrollTo(0,0);\r\n\r\n                // quick work around issue in IE11\r\n                // IE randomly thinks there is no id and throws an error\r\n                // I know it's not logical but with this 'fix' everything works fine\r\n                if(!section || !section.id) {\r\n                    return;\r\n                }\r\n\r\n                context.section = section.id;\r\n               \r\n                //initialize actions \r\n                actions.init(section.panel);\r\n\r\n                switch(section.type){\r\n                case 'tree':\r\n                    section.panel.addClass('content-panel');\r\n                    sectionHeight.init(section.panel);\r\n\r\n                    //set up the tree\r\n                    $('.taotree', section.panel).each(function(){\r\n                        var $treeElt = $(this),\r\n                            $actionBar = $('.tree-action-bar-box', section.panel);\r\n\r\n                        var rootNode = $treeElt.data('rootnode');\r\n                        var treeUrl = context.root_url;\r\n                        var treeActions = {};\r\n                        $.each($treeElt.data('actions'), function (key, val) {\r\n                            if (actions.getBy(val)) {\r\n                                treeActions[key] = val;\r\n                            }\r\n                        });\r\n                        \r\n                        if(/\\/$/.test(treeUrl)){\r\n                            treeUrl += $treeElt.data('url').replace(/^\\//, '');\r\n                        } else {\r\n                            treeUrl += $treeElt.data('url');\r\n                        }\r\n                        treeFactory($treeElt, treeUrl, {\r\n                            serverParameters : {\r\n                                extension    : context.shownExtension,\r\n                                perspective  : context.shownStructure,\r\n                                section      : context.section,\r\n                                classUri     : rootNode ? rootNode : undefined\r\n                            },\r\n                            actions : treeActions\r\n                        });\r\n                        $treeElt.on('ready.taotree', function() {\r\n                            $actionBar.addClass('active');\r\n                            sectionHeight.setHeights(section.panel);\r\n                        });\r\n                    });\r\n\r\n                    $('.navi-container', section.panel).show();\r\n                    break;\r\n                case 'content' : \r\n\r\n                    //or load the content block\r\n                    this.loadContentBlock();\r\n                    \r\n                    break;\r\n                }\r\n            })\r\n            .init();\r\n\r\n\r\n            //initialize legacy components\r\n            helpers.init();\r\n            uiForm.init();\r\n        }\r\n    };\r\n});\r\n\r\n\n","/**  \r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n * \r\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\r\n *               \r\n */\r\n\r\n/**\r\n * Recovery password page controller\r\n * @author Aleh Hutnikau <hutnikau@1pt.com>\r\n */\r\ndefine('controller/passwordRecovery',[\r\n    'jquery',\r\n    'i18n',\r\n    'module',\r\n    'ui/feedback',\r\n    'layout/version-warning'\r\n], function ($, __, module, feedback,  versionWarning) {\r\n    'use strict';\r\n    var conf = module.config(),\r\n        feedbackType;\r\n\r\n    versionWarning.init();\r\n    if (conf.message) {\r\n        for (feedbackType in conf.message) {\r\n            if (conf.message[feedbackType]) {\r\n                feedback()[feedbackType](conf.message[feedbackType]);\r\n            }\r\n        }\r\n    }\r\n});\r\n\n","define('controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers', 'ui/feedback'], function($, __, context, helpers, feedback){\r\n\r\n    var ext_installed = [];\r\n    var toInstall = [];\r\n    var indexCurrentToInstall = -1;\r\n    var percentByExt = 0;\r\n    var installError = 0;\r\n\r\n    function getDependencies(extension) {\r\n            var dependencies = [];\r\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\r\n                    var ext = $(this).attr('rel');\r\n                    var deps = getDependencies(ext);\r\n                    deps.push(ext);\r\n                    dependencies = dependencies.concat(deps);\r\n            });\r\n            return dependencies;\r\n    }\r\n\r\n    //Give an array with unique values\r\n    function getUnique(orig){\r\n            var a = [];\r\n            for (var i = 0; i < orig.length; i++) {\r\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\r\n            }\r\n            return a;\r\n    }\r\n\r\n    function progressConsole(msg) {\r\n            $('#installProgress .console').append('<p>' + msg + '</p>');\r\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\r\n    }\r\n\r\n    function installNextExtension() {\r\n            var ext = toInstall[indexCurrentToInstall];\r\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\r\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\r\n            $.ajax({\r\n                    type: \"POST\",\r\n                    url: helpers._url('install', 'ExtensionsManager', 'tao'),\r\n                    data: 'id='+ext,\r\n                    dataType: 'json',\r\n                    success: function(data) {\r\n                            helpers.loaded();\r\n                            if (data.success) {\r\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\r\n\r\n                                    // state that the extension is install in remaining dependencies.\r\n                                    $('li.ext-id.ext-' + ext).addClass('installed');\r\n\r\n                                    $('tr#'+ext).slideUp('normal', function() {\r\n                                            var $tr = $('<tr></tr>').appendTo($('#extensions-manager-container tbody')).hide();\r\n                                            var $orig = $('tr#' + ext + ' td');\r\n                                            $tr.append('<td class=\"ext-id bordered\">' + $($orig[0]).text() + '</td>');\r\n                                            $tr.append('<td class=\"author\">' + $($orig[1]).text() + '</td>');\r\n                                            $tr.append('<td class=\"version\">' + $($orig[2]).text() + '</td>');\r\n                                            $tr.slideDown('normal', function() {\r\n                                                    $('tr#' + ext).remove();\r\n\r\n                                                    // table changed, restyle.\r\n                                                    styleTables();\r\n\r\n                                                    // If the available extensions table is empty,\r\n                                                    // just inform the user.\r\n                                                    if ($('#available-extensions-container table tbody tr').length == 0){\r\n                                                            noAvailableExtensions();\r\n                                                    }\r\n\r\n                                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\r\n                                                            //Next\r\n                                                            indexCurrentToInstall++;\r\n                                                            hasNextExtensionToInstall();\r\n                                                    });\r\n                                            });\r\n                                    });\r\n                            } else {\r\n                                    installError = 1;\r\n                                    progressConsole('Installation of ' + ext + ' failed');\r\n                            }\r\n                            feedback().info(data.message);\r\n                    }\r\n            });\r\n\r\n            if (installError) {\r\n                    progressConsole(__('A fatal error occured during the installation process.'));\r\n            }\r\n    }\r\n\r\n    function postInstall(){\r\n        progressConsole(__('Post install processing'));\r\n        return $.ajax({\r\n            type: \"GET\",\r\n            url: helpers._url('postInstall', 'ExtensionsManager', 'tao')\r\n        });\r\n    }\r\n\r\n    function hasNextExtensionToInstall() {\r\n            if (indexCurrentToInstall >= toInstall.length) {\r\n                toInstall = [];\r\n                $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\r\n\r\n                postInstall().done(function(data) {\r\n                    helpers.loaded();\r\n                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\r\n                    $('#installProgress p.status').text(__('Installation done.'));\r\n                    progressConsole(__('> Installation done.'));\r\n                    progressConsole(__('... reloading page.'));\r\n\r\n                    setTimeout(function(){\r\n                        window.location.reload(true);\r\n                    }, 1000);\r\n                });\r\n            } else {\r\n                installNextExtension();\r\n            }\r\n    }\r\n\r\n    function styleTables(){\r\n            // Clean all to make this function able to \"restyle\" after\r\n            // data refresh.\r\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\r\n                                                                             .removeClass('extensionEven');\r\n\r\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\r\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\r\n    }\r\n\r\n    function noAvailableExtensions(){\r\n            var $noAvailableExtElement = $('<div/>');\r\n            $noAvailableExtElement.attr('id', 'noExtensions')\r\n                                                      .addClass('ui-state-highlight')\r\n                                                      .text(__('No extensions available.'));\r\n\r\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\r\n    }\r\n    \r\n    return {\r\n        start : function(){\r\n            \r\n            // Table styling.\r\n            styleTables();\r\n\r\n            $('#installProgress').hide();\r\n\r\n            //Detect wich extension is already installed\r\n            $('#extensions-manager-container .ext-id').each(function() {\r\n                    var ext = $(this).text();\r\n                    ext_installed.push(ext);\r\n                    $('.ext-id.ext-' + ext).addClass('installed');\r\n            });\r\n\r\n            $('#available-extensions-container tr input').click(function(event){\r\n                    event.stopPropagation();\r\n            });\r\n\r\n            $('#available-extensions-container tr input:checkbox').click(function() {\r\n                    var $installButton = $('#installButton');\r\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\r\n                            $installButton.attr('disabled', false);\r\n                    }\r\n                    else{\r\n                            $installButton.attr('disabled', true);\r\n                    }\r\n            });\r\n\r\n            $('#available-extensions-container #installButton').click(function(event) {\r\n                    //Prepare the list of extension to install in the order of dependency\r\n                    toInstall = [];\r\n                    $('#available-extensions-container input:checked').each(function() {\r\n                            var ext = $(this).prop('name').split('_')[1];\r\n                            var deps = getDependencies(ext);\r\n                            if (deps.length) {\r\n                                toInstall = toInstall.concat(deps);\r\n                            }\r\n                            toInstall.push(ext);\r\n                    });\r\n                    toInstall = getUnique(toInstall);\r\n                    if (!toInstall.length) {\r\n                            window.alert(__('Nothing to install !'));\r\n                            return false;\r\n                    }\r\n                    //Let's go\r\n                    percentByExt = 100 / toInstall.length;\r\n\r\n                    //Show the dialog with the result\r\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\r\n                    $('#installProgress .bar').width(0);\r\n                    $('#installProgress .console').empty();\r\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\r\n                    $('#installProgress').dialog({\r\n                            modal: true,\r\n                            width: 400,\r\n                            height: 300,\r\n                            buttons: [{\r\n                                text: __('No'),\r\n                                click: function() {\r\n                                        $(this).dialog('close');\r\n                                }\r\n                            },{\r\n                                    text: __('Yes'),\r\n                                    click: function() {\r\n                                            //Run the install one by one\r\n                                            progressConsole(__('Preparing installation...'));\r\n                                            $('.ui-dialog-buttonpane').remove();\r\n                                            installError = 0;\r\n                                            indexCurrentToInstall = 0;\r\n                                            installNextExtension();\r\n                                    }\r\n                                }]\r\n                    });\r\n                    event.preventDefault();\r\n            });\r\n        }\r\n    };\r\n\r\n});\r\n\n","/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/users/add',['jquery', 'module', 'helpers', 'users'], function($, module, helpers, users) {\r\n    'use strict';\r\n       \r\n    \r\n    /**\r\n     * The user add controller\r\n     * @exports controller/users/add\r\n     */    \r\n    return {\r\n        start : function(){\r\n            var conf = module.config();\r\n            var url  = helpers._url('checkLogin', 'Users', 'tao');\r\n            users.checkLogin(conf.loginId, url);\r\n            \r\n            if(conf.exit === true){\r\n\r\n                setTimeout(function(){\r\n                    //TODO would be better to clean up the form and switch the section\r\n                    window.location = helpers._url('index', 'Main', 'tao', {structure: 'users', ext : 'tao', section : 'list_users'});\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/users/disable-edit',['layout/section'], function(section) {\r\n    'use strict';\r\n       \r\n    /**\r\n     * Ensure edit section is disabled\r\n     * @exports controller/users/disable-edit\r\n     */    \r\n    return {\r\n        start : function(){\r\n            section.get('edit_user').disable();\r\n        }\r\n    };\r\n});\r\n\n","/**\r\n * @author Jérôme Bogaert <jerome@taotesting.com>\r\n * @author Bertrand Chevrier <bertrand@taotesting.com>\r\n */\r\ndefine('controller/users/index',['jquery', 'i18n', 'helpers', 'layout/section', 'ui/feedback', 'ui/datatable'], function($, __, helpers, section, feedback) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Edit a user (shows the edit section)\r\n     * @param {String} uri - the user uri\r\n     */\r\n    var editUser = function editUser(uri) {\r\n        section\r\n            .get('edit_user')\r\n            .enable()\r\n            .loadContentBlock(helpers._url('edit', 'Users', 'tao'), {uri : uri})\r\n            .show();\r\n    };\r\n\r\n    /**\r\n     * Removes a user\r\n     * @param {String} uri - the user uri\r\n     */\r\n\tvar removeUser = function removeUser(uri){\r\n        //TODO use a confirm component\r\n        if (window.confirm(__('Please confirm user deletion'))) {\r\n            $.ajax({\r\n                url : helpers._url('delete', 'Users', 'tao'),\r\n                data:  {uri : uri},\r\n                type : 'POST'\r\n            }).done(function(response){\r\n                if(response.deleted){\r\n                    feedback().success(response.message);\r\n                } else {\r\n                    feedback().error(response.message);\r\n                }\r\n                $('#user-list').datatable('refresh');\r\n            });\r\n        }\r\n\t};\r\n\r\n    /**\r\n     * The user index controller\r\n     * @exports controller/users/index\r\n     */\r\n    return {\r\n        start : function(){\r\n            var $userList = $('#user-list');\r\n    \r\n            section.on('show', function(section){\r\n                if(section.id === 'list_users'){\r\n                    $userList.datatable('refresh');\r\n                }\r\n            });\r\n\r\n            //initialize the user manager component\r\n            $userList.datatable({\r\n                url: helpers._url('data', 'Users', 'tao'),\r\n                filter: true,\r\n                actions: {\r\n                    'edit': editUser,\r\n                    'remove': removeUser\r\n                },\r\n                'model': [\r\n                    {\r\n                        id : 'login',\r\n                        label : __('Login'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'firstname',\r\n                        label : __('First Name'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'lastname',\r\n                        label : __('Last Name'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'email',\r\n                        label : __('Email'),\r\n                        sortable : true\r\n                    },{\r\n                        id : 'roles',\r\n                        label : __('Roles'),\r\n                        sortable : false\r\n                    },{\r\n                        id : 'dataLg',\r\n                        label : __('Data Language'),\r\n                        sortable : true\r\n                    },{\r\n                        id: 'guiLg',\r\n                        label : __('Interface Language'),\r\n                        sortable : true\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    };\r\n});\r\n\n"]}