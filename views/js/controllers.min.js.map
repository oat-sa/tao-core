{"version":3,"file":"routes.js","sources":["routes.js","../tao/controller/RdfImExport/index.js","../tao/controller/list/index.js","../tao/controller/login.js","../tao/controller/main.js","../tao/controller/routes.js","../tao/controller/settings/extensionManager.js","../tao/controller/users/add.js","../tao/controller/users/disable-edit.js","../tao/controller/users/index.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'controller/main',\n                'getSectionActions' : 'controller/main/actions',\n                'getSectionTrees' : 'controller/main/trees'\n            }\n        },\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index'\n            }\n        },\n        'RdfImExport' : {\n            'actions' : {\n                'index' : 'controller/RdfImExport/index'\n            }\n        },\n        'Users' : {\n            'deps' : 'controller/users/disable-edit',\n            'actions' : {\n                'index' : 'controller/users/index',\n                'add'   : 'controller/users/add'\n            }\n        }\n    };\n});\n\n"," require(['jquery', 'lodash', 'i18n', 'helpers', 'ui/feedback', 'uiForm'], function($, _, __, helpers, feedback, uiForm){\n\n    var $form = $('#export'),\n        $submitter = $form.find('.form-submitter'),\n        $sent = $form.find(\":input[name='\" + $form.attr('name') + \"_sent']\");\n\n    //overwrite the submit behaviour\n    $submitter.off('click').on('click', function(e){\n\n        e.preventDefault();\n\n        if(!parseInt($sent.val())){\n            return;\n        }\n\n        //prepare download params\n        var $iframeContainer = $('#iframe-container'),\n            params = {},\n            instances = [];\n\n        _.each($form.serializeArray(), function(param){\n            if(param.name.indexOf('rdftpl_ns_') === 0){\n                instances.push(param.name.substring(10));\n            }else{\n                params[param.name] = param.value;\n            }\n        });\n        if (!instances.length) {\n            feedback().error(__(\"Please select alteast one namespace\"));\n            return;\n        }\n        params.namespaces = instances;\n\n        //build download url\n        var url = helpers._url('export', 'RdfImExport', 'tao', params);\n\n        //use the iframe to embed download in the page\n        var $iframe = $('<iframe>', {src : url}).hide();\n        $iframeContainer.empty().append($iframe);\n\n    });\n\n});\ndefine(\"tao/controller/RdfImExport/index\", function(){});\n\n","define('tao/controller/list/index',['jquery', 'i18n', 'helpers', 'ui/feedback'], function ($, __, helpers, feedback) {\n    'use strict';\n\n    function _addSquareBtn(title, icon, $listToolBar) {\n        var $btn = $('<button>', { 'class': 'btn-info small lft ' +  'icon-'+ icon, title: __(title) });\n        $listToolBar.append($btn);\n        return $btn;\n    }\n\n    return {\n\n        start: function () {\n\n            var saveUrl = helpers._url('saveLists', 'Lists', 'tao');\n            var delListUrl = helpers._url('removeList', 'Lists', 'tao');\n            var delEltUrl = helpers._url('removeListElement', 'Lists', 'tao');\n\n            $(\".list-edit-btn\").click(function () {\n                var $btn = $(this),\n                    uri = $btn.data('uri'),\n                    $listContainer = $(\"#list-data_\" + uri ),\n                // form must be on the inside rather than on the outside as it has been in 2.6\n                    $listForm     = $listContainer.find('form'),\n                    $listTitleBar = $listContainer.find('.container-title h6'),\n                    $listToolBar  = $listContainer.find('.data-container-footer'),\n                    $listSaveBtn,\n                    $listNewBtn;\n\n                if (!$listForm.length) {\n\n                    $listForm = $('<form>');\n                    $listContainer.wrapInner($listForm);\n                    $listContainer.find('form').append('<input type=\"hidden\" name=\"uri\" value=\"' + uri + '\" />');\n\n                    var $labelEdit = $(\"<input type='text' name='label' value='\" + $listTitleBar.text() + \"'/>\");\n                    $listTitleBar.html($labelEdit);\n\n                    if ($listContainer.find('.list-element').length) {\n                        $listContainer.find('.list-element').replaceWith(function () {\n                            return \"<input type='text' name='\" + $(this).attr('id') + \"' value='\" + $(this).text() + \"' />\";\n                        });\n                    }\n\n                    var elementList = $listContainer.find('ol');\n                    elementList.addClass('sortable-list');\n                    elementList.find('li').prepend('<span class=\"icon-grip\" ></span>');\n                    elementList.find('li').append('<span class=\"icon-checkbox-crossed list-element-delete-btn\" style=\"cursor:pointer;\" ></span>');\n\n                    elementList.sortable({\n                        axis: 'y',\n                        opacity: 0.6,\n                        placeholder: 'ui-state-error',\n                        tolerance: 'pointer',\n                        update: function (event, ui) {\n                            var map = {};\n                            $.each($(this).sortable('toArray'), function (index, id) {\n                                map[id] = 'list-element_' + (index + 1);\n                            });\n                            $(this).find('li').each(function () {\n                                var id = $(this).attr('id');\n                                if (map[id]) {\n                                    $(this).attr('id', map[id]);\n                                    var newName = $(this).find('input').attr('name').replace(id, map[id]);\n                                    $(this).find('input').attr('name', newName);\n                                }\n                            });\n                        }\n                    });\n\n                    $listSaveBtn = _addSquareBtn('Save element', 'save', $listToolBar);\n                    $listSaveBtn.on('click', function () {\n                        $.postJson(\n                            saveUrl,\n                            $(this).closest('form').serializeArray(),\n                            function (response) {\n                                if (response.saved) {\n                                    feedback().success(__('\"list saved\"'));\n                                    helpers._load(helpers.getMainContainerSelector(), helpers._url('index', 'Lists', 'tao'));\n                                }else{\n                                    feedback().error(__('List not saved'));\n                                }\n                            }\n                        );\n                        return false;\n                    });\n\n                    $listNewBtn = _addSquareBtn('New element', 'add', $listToolBar);\n                    $listNewBtn.click(function () {\n                        var level = $(this).closest('form').find('ol').children().length + 1;\n                        $(this).closest('form').find('ol').append(\n                            \"<li id='list-element_\" + level + \"'>\" +\n                            \"<span class='icon-grip' ></span>\" +\n                            \"<input type='text' name='list-element_\" + level + \"_' />\" +\n                            \"<span class='icon-add list-element-delete-btn' ></span>\" +\n                            \"</li>\");\n                        return false;\n                    });\n                }\n\n                $(\".list-element-delete-btn\").click(function () {\n                    var $btn = $(this),\n                        uri = $btn.data('uri');\n                    if (confirm(__(\"Please confirm you want to delete this list element.\"))) {\n                        var element = $(this).parent();\n                        uri = element.find('input:text').attr('name').replace(/^list\\-element\\_([1-9]*)\\_/, '');\n                        $.postJson(\n                            delEltUrl,\n                            {uri: uri},\n                            function (response) {\n                                if (response.deleted) {\n                                    element.remove();\n                                    feedback().success(__('Element deleted'));\n                                }else{\n                                    feedback().error(__('Element not deleted'));\n                                }\n                            }\n                        );\n                    }\n                });\n            });\n\n            $('.list-delete-btn').click(function () {\n                if (confirm(__(\"Please confirm you want to delete this list. This operation cannot be undone.\"))) {\n                    var $btn = $(this),\n                        uri = $btn.data('uri'),\n                        $list = $(this).parents(\".data-container\");\n                    $.postJson(\n                        delListUrl,\n                        {uri: uri},\n                        function (response) {\n                            if (response.deleted) {\n                                feedback().success(__('List deleted'));\n                                $list.remove();\n                            }else{\n                                feedback().error(__('List not deleted'));\n                            }\n                        }\n                    );\n                }\n            });\n        }\n    };\n});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * The controller dedicated to the login page.\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/login',[\n    'jquery',\n    'i18n',\n    'module',\n    'ui/feedback',\n    'layout/version-warning'\n], function ($, __, module, feedback,  versionWarning) {\n    'use strict';\n\n    var conf, type, context = $('.entry-pages-container'), $fields = $();\n\n    versionWarning.init();\n\n    $('input[type=\"text\"]').eq(0).focus();\n\n    // empty $fields sent\n    if(context.find('.form-error').length){\n        conf = {\n            message: {\n                error: __('All fields are required')\n            }\n        };\n        context.find(':input').each(function() {\n            if(!this.value) {\n                $fields = $fields.add($(this));\n            }\n        });\n    }\n    // if the module config contains a message object\n    else {\n        conf = module.config();\n    }\n\n    // any error/info creates feedback\n    if (conf.message) {\n        $fields = context.find(':input');\n        for (type in conf.message) {\n            if (!conf.message[type]) {\n                continue;\n            }\n            feedback()[type](conf.message[type]);\n            $fields.addClass(type);\n        }\n    }\n\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/main',[\n    'jquery',\n    'i18n',\n    'context',\n    'helpers',\n    'uiForm',\n    'layout/section',\n    'layout/actions',\n    'layout/tree',\n    'layout/version-warning',\n    'layout/section-height',\n    'layout/loading-bar',\n    'layout/nav'\n],\nfunction ($, __, context, helpers, uiForm, section, actions, treeFactory, versionWarning, sectionHeight, loadingBar, nav) {\n    'use strict';\n\n    /**\n     * This controller initialize all the layout components used by the backend : sections, actions, tree, loader, etc.\n     * @exports tao/controller/main\n     */\n    return {\n        start : function(){\n\n            var $doc = $(document);\n\n            versionWarning.init();\n\n            //just before an ajax request\n            $doc.ajaxSend(function () {\n                loadingBar.start();\n            });\n\n            //when an ajax request complete\n            $doc.ajaxComplete(function () {\n                loadingBar.stop();\n            });\n\n            //navigation bindings\n            nav.init();\n\n            //initialize sections \n            section.on('activate', function(section){\n\n                window.scrollTo(0,0);\n\n                context.section = section.id;\n               \n                //initialize actions \n                actions.init(section.panel);\n\n                switch(section.type){\n                case 'tree':\n                    section.panel.addClass('content-panel');\n                    sectionHeight.init(section.panel);\n\n                    //set up the tree\n                    $('.taotree', section.panel).each(function(){\n                        var $treeElt = $(this),\n                            $actionBar = $('.tree-action-bar-box', section.panel);\n\n                        var rootNode = $treeElt.data('rootnode');\n                        var treeUrl = context.root_url;\n                        if(/\\/$/.test(treeUrl)){\n                            treeUrl += $treeElt.data('url').replace(/^\\//, '');\n                        } else {\n                            treeUrl += $treeElt.data('url');\n                        }\n                        treeFactory($treeElt, treeUrl, {\n                            serverParameters : {\n                                extension   : context.shownExtension,\n                                perspective : context.shownStructure,\n                                section     : context.section,\n                                classUri\t: rootNode ? rootNode : undefined\n                            },\n                            actions : {\n                                'selectClass'    : $treeElt.data('action-selectclass'),\n                                'selectInstance' : $treeElt.data('action-selectinstance'),\n                                'moveInstance'   : $treeElt.data('action-moveinstance'),\n                                'delete'         : $treeElt.data('action-delete')\n                            }\n                        });\n                        $treeElt.on('ready.taotree', function() {\n                            $actionBar.addClass('active');\n                            sectionHeight.setHeights(section.panel);\n                        });\n                    });\n\n                    $('.navi-container', section.panel).show();\n                    break;\n                case 'content' : \n\n                    //or load the content block\n                    this.loadContentBlock();\n                    \n                    break;\n                }\n            })\n            .init();\n\n\n            //initialize legacy components\n            helpers.init();\n            uiForm.init();\n        }\n    };\n});\n\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('tao/controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'controller/main',\n                'getSectionActions' : 'controller/main/actions',\n                'getSectionTrees' : 'controller/main/trees'\n            }\n        },\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index'\n            }\n        },\n        'RdfImExport' : {\n            'actions' : {\n                'index' : 'controller/RdfImExport/index'\n            }\n        },\n        'Users' : {\n            'deps' : 'controller/users/disable-edit',\n            'actions' : {\n                'index' : 'controller/users/index',\n                'add'   : 'controller/users/add'\n            }\n        }\n    };\n});\n\n","define('tao/controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers', 'ui/feedback'], function($, __, context, helpers, feedback){\n\n    var ext_installed = [];\n    var toInstall = [];\n    var indexCurrentToInstall = -1;\n    var percentByExt = 0;\n    var installError = 0;\n\n    function getDependencies(extension) {\n            var dependencies = [];\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\n                    var ext = $(this).attr('rel');\n                    var deps = getDependencies(ext);\n                    deps.push(ext);\n                    dependencies = dependencies.concat(deps);\n            });\n            return dependencies;\n    }\n\n    //Give an array with unique values\n    function getUnique(orig){\n            var a = [];\n            for (var i = 0; i < orig.length; i++) {\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\n            }\n            return a;\n    }\n\n    function progressConsole(msg) {\n            $('#installProgress .console').append('<p>' + msg + '</p>');\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\n    }\n\n    function installNextExtension() {\n            var ext = toInstall[indexCurrentToInstall];\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\n            $.ajax({\n                    type: \"POST\",\n                    url: helpers._url('install', 'ExtensionsManager', 'tao'),\n                    data: 'id='+ext,\n                    dataType: 'json',\n                    success: function(data) {\n                            helpers.loaded();\n                            if (data.success) {\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\n\n                                    // state that the extension is install in remaining dependencies.\n                                    $('li.ext-id.ext-' + ext).addClass('installed');\n\n                                    $('tr#'+ext).slideUp('normal', function() {\n                                            var $tr = $('<tr></tr>').appendTo($('#extensions-manager-container tbody')).hide();\n                                            var $orig = $('tr#' + ext + ' td');\n                                            $tr.append('<td class=\"bordered\">' + $($orig[0]).text() + '</td>');\n                                            $tr.append('<td class=\"bordered\">' + $($orig[1]).text() + '</td>');\n                                            $tr.append('<td>' + $($orig[2]).text() + '</td>');\n                                            $tr.slideDown('normal', function() {\n                                                    $('tr#' + ext).remove();\n\n                                                    // table changed, restyle.\n                                                    styleTables();\n\n                                                    // If the available extensions table is empty,\n                                                    // just inform the user.\n                                                    if ($('#available-extensions-container table tbody tr').length == 0){\n                                                            noAvailableExtensions();\n                                                    }\n\n                                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\n                                                            //Next\n                                                            indexCurrentToInstall++;\n                                                            hasNextExtensionToInstall();\n                                                    });\n                                            });\n                                    });\n                            } else {\n                                    installError = 1;\n                                    progressConsole('Installation of ' + ext + ' failed');\n                            }\n                            feedback().info(data.message);\n                    }\n            });\n\n            if (installError) {\n                    progressConsole(__('A fatal error occured during the installation process.'));\n            }\n    }\n\n    function postInstall(){\n        progressConsole(__('Post install processing'));\n        return $.ajax({\n            type: \"GET\",\n            url: helpers._url('postInstall', 'ExtensionsManager', 'tao')\n        });\n    }\n\n    function hasNextExtensionToInstall() {\n            if (indexCurrentToInstall >= toInstall.length) {\n                toInstall = [];\n                $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\n\n                postInstall().done(function(data) {\n                    helpers.loaded();\n                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\n                    $('#installProgress p.status').text(__('Installation done.'));\n                    progressConsole(__('> Installation done.'));\n                    progressConsole(__('... reloading page.'));\n\n                    setTimeout(function(){\n                        window.location.reload(true);\n                    }, 1000);\n                });\n            } else {\n                installNextExtension();\n            }\n    }\n\n    function styleTables(){\n            // Clean all to make this function able to \"restyle\" after\n            // data refresh.\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\n                                                                             .removeClass('extensionEven');\n\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\n    }\n\n    function noAvailableExtensions(){\n            var $noAvailableExtElement = $('<div/>');\n            $noAvailableExtElement.attr('id', 'noExtensions')\n                                                      .addClass('ui-state-highlight')\n                                                      .text(__('No extensions available.'));\n\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\n    }\n    \n    return {\n        start : function(){\n            \n            // Table styling.\n            styleTables();\n\n            $('#installProgress').hide();\n\n            //Detect wich extension is already installed\n            $('#extensions-manager-container .ext-id').each(function() {\n                    var ext = $(this).text();\n                    ext_installed.push(ext);\n                    $('.ext-id.ext-' + ext).addClass('installed');\n            });\n\n            $('#available-extensions-container tr input').click(function(event){\n                    event.stopPropagation();\n            });\n\n            $('#available-extensions-container tr input:checkbox').click(function() {\n                    var $installButton = $('#installButton');\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\n                            $installButton.attr('disabled', false);\n                    }\n                    else{\n                            $installButton.attr('disabled', true);\n                    }\n            });\n\n            $('#available-extensions-container #installButton').click(function(event) {\n                    //Prepare the list of extension to install in the order of dependency\n                    toInstall = [];\n                    $('#available-extensions-container input:checked').each(function() {\n                            var ext = $(this).prop('name').split('_')[1];\n                            var deps = getDependencies(ext);\n                            if (deps.length) {\n                                toInstall = toInstall.concat(deps);\n                            }\n                            toInstall.push(ext);\n                    });\n                    toInstall = getUnique(toInstall);\n                    if (!toInstall.length) {\n                            window.alert(__('Nothing to install !'));\n                            return false;\n                    }\n                    //Let's go\n                    percentByExt = 100 / toInstall.length;\n\n                    //Show the dialog with the result\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\n                    $('#installProgress .bar').width(0);\n                    $('#installProgress .console').empty();\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\n                    $('#installProgress').dialog({\n                            modal: true,\n                            width: 400,\n                            height: 300,\n                            buttons: [{\n                                text: __('No'),\n                                click: function() {\n                                        $(this).dialog('close');\n                                }\n                            },{\n                                    text: __('Yes'),\n                                    click: function() {\n                                            //Run the install one by one\n                                            progressConsole(__('Preparing installation...'));\n                                            $('.ui-dialog-buttonpane').remove();\n                                            installError = 0;\n                                            indexCurrentToInstall = 0;\n                                            installNextExtension();\n                                    }\n                                }]\n                    });\n                    event.preventDefault();\n            });\n        }\n    };\n\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/users/add',['jquery', 'module', 'helpers', 'users'], function($, module, helpers, users) {\n    'use strict';\n       \n    \n    /**\n     * The user add controller\n     * @exports controller/users/add\n     */    \n    return {\n        start : function(){\n            var conf = module.config();\n            var url  = helpers._url('checkLogin', 'Users', 'tao');\n            users.checkLogin(conf.loginId, url);\n            \n            if(conf.exit === true){\n\n                setTimeout(function(){\n                    //TODO would be better to clean up the form and switch the section\n                    window.location = helpers._url('index', 'Main', 'tao', {structure: 'users', ext : 'tao', section : 'list_users'});\n                }, 1000);\n            }\n        }\n    };\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/users/disable-edit',['layout/section'], function(section) {\n    'use strict';\n       \n    /**\n     * Ensure edit section is disabled\n     * @exports controller/users/disable-edit\n     */    \n    return {\n        start : function(){\n            section.get('edit_user').disable();\n        }\n    };\n});\n\n","/**\n * @author Jérôme Bogaert <jerome@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('tao/controller/users/index',['jquery', 'i18n', 'helpers', 'layout/section', 'ui/feedback', 'ui/datatable'], function($, __, helpers, section, feedback) {\n    'use strict';\n\n    /**\n     * Edit a user (shows the edit section)\n     * @param {String} uri - the user uri\n     */\n    var editUser = function editUser(uri) {\n        section\n            .get('edit_user')\n            .enable()\n            .loadContentBlock(helpers._url('edit', 'Users', 'tao'), {uri : uri})\n            .show();\n    };\n\n    /**\n     * Removes a user\n     * @param {String} uri - the user uri\n     */\n\tvar removeUser = function removeUser(uri){\n        //TODO use a confirm component\n        if (window.confirm(__('Please confirm user deletion'))) {\n            $.ajax({\n                url : helpers._url('delete', 'Users', 'tao'),\n                data:  {uri : uri},\n                type : 'POST'\n            }).done(function(response){\n                if(response.deleted){\n                    feedback().success(response.message);\n                } else {\n                    feedback().error(response.message);\n                }\n                $('#user-list').datatable('refresh');\n            });\n        }\n\t};\n\n    /**\n     * The user index controller\n     * @exports controller/users/index\n     */\n    return {\n        start : function(){\n            var $userList = $('#user-list');\n    \n            section.on('show', function(section){\n                if(section.id === 'list_users'){\n                    $userList.datatable('refresh');\n                }\n\n            });\n\n            //initialize the user manager component\n            $userList.datatable({\n                'url': helpers._url('data', 'Users', 'tao'),\n                'actions' : {\n                    'edit': editUser,\n                    'remove': removeUser\n                },\n                'model' : [\n                    {\n                        id : 'login',\n                        label : __('Login'),\n                        sortable : true\n                    },{\n                        id : 'name',\n                        label : __('Name'),\n                        sortable : true\n                    },\n                    {\n                        id : 'email',\n                        label : __('Email'),\n                        sortable : true\n                    },{\n                        id : 'role',\n                        label : __('Roles'),\n                        sortable : false\n                    },{\n                        id : 'dataLg',\n                        label : __('Data Language'),\n                        sortable : true\n                    },{\n                        id: 'guiLg',\n                        label : __('Interface Language'),\n                        sortable : true\n                    }\n                ]\n            });\n        }\n    };\n});\n\n"]}