{"version":3,"names":["loaderScript","document","getElementById","configUrl","getAttribute","bundle","loadController","controllerOptions","controllerPath","params","JSON","parse","err","window","require","controller","startController","started","start","addEventListener","readyState","loadBundles","loaded","bundles","concat","filter","item","index","indexOf","forEach","length","define","i18nTr","format","translations","__","message","localized","arguments","apply","slice","call","$","getHeaderHeight","headerElements","$element","headerHeight","is","outerHeight","updateHeight","loadingBarHeight","$doc","height","$loadingBar","hasClass","$win","scrollTop","addClass","removeClass","devicePixelRatio","originalHeight","$contentWrap","$versionWarning","find","$header","on","covered","stop","toggleClass","hideWarning","slide","callback","documentElement","className","versionWarning","trigger","slideUp","hide","init","cookie","path","global","factory","exports","module","amd","DOMPurify","addToSet","set","array","setPrototypeOf","l","element","lcElement","toLowerCase","Object","isFrozen","clone","object","newObject","property","apply$1","hasOwnProperty","_toConsumableArray","arr","Array","isArray","i","arr2","from","createDOMPurify","getGlobal","root","version","removed","nodeType","isSupported","originalDocument","useDOMParser","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","TrustedTypes","template","createElement","content","ownerDocument","trustedTypesPolicy","_createTrustedTypesPolicy","emptyHTML","createHTML","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","MUSTACHE_EXPR$$1","MUSTACHE_EXPR","ERB_EXPR$$1","ERB_EXPR","DATA_ATTR$$1","DATA_ATTR","ARIA_ATTR$$1","ARIA_ATTR","IS_SCRIPT_OR_DATA$$1","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE$$1","ATTR_WHITESPACE","IS_ALLOWED_URI$$1","IS_ALLOWED_URI","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","html","svg","svgFilters","mathMl","text","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","html$1","svg$1","mathMl$1","xml","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","_typeof","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","ADD_URI_SAFE_ATTR","table","freeze","_forceRemove","node","push","parentNode","removeChild","outerHTML","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","match","parseFromString","_doc","body","firstElementChild","insertBefore","createTextNode","childNodes","querySelector","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","_isNode","obj","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","insertAdjacentHTML","htmlToInsert","test","cloneNode","replace","_isValidAttribute","lcTag","lcName","value","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","namespaceURI","trim","id","arraySlice","setAttributeNS","pop","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","TypeError","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","freeze$1","x","freeze$2","_ref$1","Reflect","fun","thisValue","args","seal","Symbol","iterator","constructor","prototype","_ref","trustedTypes","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","policyName","html$$1","e","console","warn","purify","_","context","loadingBar","loginComponent","locale","store","_defaults","disableAutocomplete","enablePasswordReveal","disableAutofocus","error","conf","defaults","config","login","after","dir","getLanguageDirection"],"sources":["bootstrap.js","../i18n.js","../layout/loading-bar.js","../layout/version-warning.js","../lib/dompurify/purify.js","../controller/login.js","module-create.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","define('i18n',['json!i18ntr/messages.json', 'core/format'], function(i18nTr, format){\n    'use strict';\n\n    var translations = i18nTr.translations;\n\n    /**\n     * Common translation method.\n     * @see /locales/#lang#/messages_po.js\n     *\n     * @param {String} message should be the string in the default language (usually english) used as the key in the gettext translations\n     * @returns {String} translated message\n     */\n    return function __(message){\n        var localized =  translations[message] || message;\n\n        if(arguments.length > 1){\n            localized = format.apply(null, [localized].concat([].slice.call(arguments, 1)));\n        }\n\n        return localized;\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\n/**\n * Loading bar a.k.a. Knight Rider\n *\n * @author dieter <dieter@taotesting.com>\n */\ndefine('layout/loading-bar',['jquery'],\n    function ($) {\n        'use strict';\n\n        var $loadingBar = $('.loading-bar'),\n            originalHeight = $loadingBar.height(),\n            $win = $(window),\n            $doc = $(document),\n            $contentWrap = $('.content-wrap'),\n            headerElements = {\n                $versionWarning: $contentWrap.find('.version-warning'),\n                $header: $contentWrap.find('header:first()')\n            },\n            headerHeight = getHeaderHeight(headerElements);\n\n        /**\n         * the TAO header can have three different forms\n         * 1. version warning on alpha/beta + main navi\n         * 2. main navi only on regular version\n         * 3. nothing in the case of LTI\n         *\n         * @param headerElements\n         */\n        function getHeaderHeight(headerElements) {\n            var $element;\n            headerHeight = 0;\n            for ($element in headerElements) {\n                if (headerElements[$element].length && headerElements[$element].is(':visible')) {\n                    headerHeight += headerElements[$element].outerHeight();\n                }\n            }\n            return headerHeight;\n        }\n\n        /**\n         * Update height of cover element\n         */\n        function updateHeight() {\n            var loadingBarHeight = $doc.height();\n            if (!$loadingBar.hasClass('loading')) {\n                return;\n            }\n            // status of height would change for instance when version warning is hidden\n            headerHeight = getHeaderHeight(headerElements);\n\n            if (headerHeight <= $win.scrollTop()) {\n                $loadingBar.addClass('fixed');\n            } else {\n                $loadingBar.removeClass('fixed');\n            }\n\n            if ($loadingBar.hasClass('loadingbar-covered')) {\n                if (window.devicePixelRatio !== 1) {\n                    loadingBarHeight--;\n                }\n                $loadingBar.height(loadingBarHeight);\n            } else {\n                $loadingBar.height('');\n            }\n        }\n\n        $win.on('scroll.loadingbar', function () {\n            updateHeight();\n        });\n\n        return {\n            /**\n             * Show loading bar\n             * @param {Boolean} [covered = true] - - whether overlay HTML element should be added (disable GUI).\n             */\n            start: function (covered) {\n                if (typeof covered === 'undefined') {\n                    covered = true;\n                }\n                if ($loadingBar.hasClass('loading')) {\n                    $loadingBar.stop();\n                }\n                $loadingBar.addClass('loading');\n                $loadingBar.toggleClass('loadingbar-covered', covered);\n                updateHeight();\n            },\n            stop: function () {\n                $loadingBar.removeClass('loading fixed').height(originalHeight);\n            }\n        };\n    });\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *\n */\n\ndefine('layout/version-warning',[\n    'jquery',\n    'jquery.cookie'\n],\n    function($){\n\n        'use strict';\n\n\n        var versionWarning = $('.version-warning');\n\n        /**\n         * Hide the warning and add a class to <html>\n         *\n         * @param slide\n         */\n        function hideWarning(slide) {\n\n            var callback = function() {\n                document.documentElement.className += ' no-version-warning';\n                versionWarning.trigger('hiding.versionwarning');\n            };\n\n            if(!slide) {\n                versionWarning.hide();\n                callback();\n            }\n            else {\n                versionWarning.slideUp('slow', function() {\n                    versionWarning.slideUp('slow', callback);\n                });\n            }\n        }\n\n    return {\n        /**\n         * Initialize behaviour of version warning\n         */\n        init : function(){\n            if($.cookie('versionWarning')) {\n                hideWarning(false);\n                return;\n            }\n\n            versionWarning.find('.close-trigger').on('click', function() {\n                $.cookie('versionWarning', true, { path: '/' });\n                hideWarning(true);\n            });\n\n        }\n    };\n});\n\n\n\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('lib/dompurify/purify',factory) :\n\t(global.DOMPurify = factory());\n}(this, (function () { 'use strict';\n\nvar freeze$1 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html = freeze$1(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze$1(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\nvar svgFilters = freeze$1(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\nvar mathMl = freeze$1(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\nvar text = freeze$1(['#text']);\n\nvar freeze$2 = Object.freeze || function (x) {\n  return x;\n};\n\nvar html$1 = freeze$2(['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'crossorigin', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'integrity', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\nvar svg$1 = freeze$2(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze$2(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze$2(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nvar hasOwnProperty = Object.hasOwnProperty;\nvar setPrototypeOf = Object.setPrototypeOf;\n\nvar _ref$1 = typeof Reflect !== 'undefined' && Reflect;\nvar apply$1 = _ref$1.apply;\n\nif (!apply$1) {\n  apply$1 = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = element.toLowerCase();\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!Object.isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = {};\n  var property = void 0;\n  for (property in object) {\n    if (apply$1(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n  return newObject;\n}\n\nvar seal = Object.seal || function (x) {\n  return x;\n};\n\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g // eslint-disable-line no-control-regex\n);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect;\nvar apply = _ref.apply;\n\nvar arraySlice = Array.prototype.slice;\nvar freeze = Object.freeze;\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (e) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '1.0.9';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n  var useDOMParser = false;\n  var removeTitle = false;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      TrustedTypes = window.TrustedTypes;\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(TrustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      getElementsByTagName = _document.getElementsByTagName,\n      createDocumentFragment = _document.createDocumentFragment;\n  var importNode = originalDocument.importNode;\n\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for jQuery's $() factory? */\n  var SAFE_FOR_JQUERY = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n  var RETURN_DOM_IMPORT = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    DOMPurify.removed.push({ element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (err) {\n      node.outerHTML = emptyHTML;\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      DOMPurify.removed.push({\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (err) {\n      DOMPurify.removed.push({\n        attribute: null,\n        from: node\n      });\n    }\n    node.removeAttribute(name);\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = dirty.match(/^[\\s]+/);\n      leadingWhitespace = matches && matches[0];\n      if (leadingWhitespace) {\n        dirty = dirty.slice(leadingWhitespace.length);\n      }\n    }\n\n    /* Use DOMParser to workaround Firefox bug (see comment below) */\n    if (useDOMParser) {\n      try {\n        doc = new DOMParser().parseFromString(dirty, 'text/html');\n      } catch (err) {}\n    }\n\n    /* Remove title to fix a mXSS bug in older MS Edge */\n    if (removeTitle) {\n      addToSet(FORBID_TAGS, ['title']);\n    }\n\n    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n    Safari (see comment below) */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      var _doc = doc,\n          body = _doc.body;\n\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    }\n\n    if (leadingWhitespace) {\n      doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  // Firefox uses a different parser for innerHTML rather than\n  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n  // which means that you *must* use DOMParser, otherwise the output may\n  // not be safe if used in a document.write context later.\n  //\n  // So we feature detect the Firefox bug and use the DOMParser if necessary.\n  //\n  // MS Edge, in older versions, is affected by an mXSS behavior. The second\n  // check tests for the behavior and fixes it if necessary.\n  if (DOMPurify.isSupported) {\n    (function () {\n      try {\n        var doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=1//\">');\n        if (doc.querySelector('svg img')) {\n          useDOMParser = true;\n        }\n      } catch (err) {}\n    })();\n    (function () {\n      try {\n        var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\n        if (doc.querySelector('title').innerHTML.match(/<\\/title/)) {\n          removeTitle = true;\n        }\n      } catch (err) {}\n    })();\n  }\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(obj) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    hooks[entryPoint].forEach(function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = currentNode.nodeName.toLowerCase();\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for black-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          var htmlToInsert = currentNode.innerHTML;\n          currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n        } catch (err) {}\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Convert markup to cover jQuery behavior */\n    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {\n      DOMPurify.removed.push({ element: currentNode.cloneNode() });\n      if (currentNode.innerHTML) {\n        currentNode.innerHTML = currentNode.innerHTML.replace(/</g, '&lt;');\n      } else {\n        currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n      }\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = content.replace(MUSTACHE_EXPR$$1, ' ');\n      content = content.replace(ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        DOMPurify.removed.push({ element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Sanitize attribute content to be template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      value = value.replace(MUSTACHE_EXPR$$1, ' ');\n      value = value.replace(ERB_EXPR$$1, ' ');\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && DATA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && ARIA_ATTR$$1.test(lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (IS_ALLOWED_URI$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if ((lcName === 'src' || lcName === 'xlink:href') && lcTag !== 'script' && value.indexOf('data:') === 0 && DATA_URI_TAGS[lcTag]) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA$$1.test(value.replace(ATTR_WHITESPACE$$1, ''))) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} node to sanitize\n   */\n  // eslint-disable-next-line complexity\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var idAttr = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = attr.value.trim();\n      lcName = name.toLowerCase();\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Remove attribute */\n      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n      // remove a \"name\" attribute from an <img> tag that has an \"id\"\n      // attribute at the time.\n      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n        idAttr = attributes.id;\n        attributes = apply(arraySlice, attributes, []);\n        _removeAttribute('id', currentNode);\n        _removeAttribute(name, currentNode);\n        if (attributes.indexOf(idAttr) > l) {\n          currentNode.setAttribute('id', idAttr.value);\n        }\n      } else if (\n      // This works around a bug in Safari, where input[type=file]\n      // cannot be dynamically set after type has been removed\n      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n        continue;\n      } else {\n        // This avoids a crash in Safari v9.0 with double-ids.\n        // The trick is to first set the id to be empty and then to\n        // remove the attribute\n        if (name === 'id') {\n          currentNode.setAttribute(name, '');\n        }\n        _removeAttribute(name, currentNode);\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        DOMPurify.removed.pop();\n      } catch (err) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw new TypeError('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw new TypeError('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!-->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else {\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /* AdoptNode() is not used because internal state is not reset\n               (e.g. the past names map of a HTMLFormElement), this is safe\n               in theory but we would rather not risk another attack vector.\n               The state that is cloned by importNode() is explicitly defined\n               by the specs. */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    return trustedTypesPolicy ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    var lcTag = tag.toLowerCase();\n    var lcName = attr.toLowerCase();\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    hooks[entryPoint].push(hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint].pop();\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nreturn purify;\n\n})));\n//# sourceMappingURL=purify.js.map\n;\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\n/**\n * The controller dedicated to the login page.\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/login',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'module',\n    'context',\n    'layout/loading-bar',\n    'layout/version-warning',\n    'ui/login/login',\n    'util/locale',\n    'core/store'\n], function ($, _, __, module, context, loadingBar, versionWarning, loginComponent, locale, store) {\n    'use strict';\n\n    var _defaults = {\n        disableAutocomplete: false,\n        enablePasswordReveal: false,\n        disableAutofocus: false,\n        message: {\n            error: ''\n        }\n    };\n\n    /**\n     * The login controller\n     */\n    return {\n\n        /**\n         * Controller entry point\n         */\n        start: function start() {\n            var conf = _.defaults({}, module.config(), _defaults);\n            var login = loginComponent($('#login-box-inner-container'), conf);\n\n            login.on('init', function() {\n                loadingBar.start();\n            }).after('render', function() {\n                versionWarning.init();\n                loadingBar.stop();\n            }).on('submit.login', function() {\n                loadingBar.start();\n            });\n\n            // adding attr for RTL languages\n            $('.small-navi').attr({dir: locale.getLanguageDirection(context.locale)});\n        }\n    };\n});\n\n","\ndefine(\"loader/login.bundle\", function(){});\n"],"mappings":"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"}