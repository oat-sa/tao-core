{"version":3,"sources":["controller/entry.js","controller/Lock/locked.js","controller/main.js","controller/passwordRecovery.js","controller/routes.js","controller/settings/extensionManager.js","controller/users/add.js","controller/users/disable-edit.js","controller/users/index.js"],"names":["define","$","_","__","feedback","start","$container","errorMessage","data","error","helpers","Lock","sectionApi","click","e","preventDefault","ajax","url","_url","type","uri","this","dataType","success","response","trigger","module","context","uiForm","section","actions","treeFactory","versionWarning","sectionHeight","loadingBar","nav","search","$doc","document","init","ajaxSend","ajaxComplete","stop","on","window","scrollTo","id","panel","addClass","each","$treeElt","$actionBar","rootNode","treeUrl","root_url","treeActions","key","val","getBy","test","replace","serverParameters","extension","shownExtension","perspective","shownStructure","classUri","undefined","setHeights","show","loadContentBlock","feedbackType","conf","config","message","Main","index","entry","getSectionActions","getSectionTrees","login","PasswordRecovery","locked","ExtensionsManager","Users","deps","add","getDependencies","dependencies","ext","attr","push","concat","getUnique","orig","a","i","length","inArray","progressConsole","msg","append","prop","scrollTop","installNextExtension","toInstall","indexCurrentToInstall","text","loaded","slideUp","$tr","appendTo","hide","$orig","slideDown","remove","styleTables","noAvailableExtensions","animate","width","percentByExt","hasNextExtensionToInstall","installError","info","postInstall","backgroundColor","done","setTimeout","location","reload","removeClass","$noAvailableExtElement","empty","ext_installed","event","stopPropagation","$installButton","parent","find","split","alert","join","dialog","modal","height","buttons","users","checkLogin","loginId","exit","structure","get","disable","editUser","enable","removeUser","tokenName","xsrfTokenName","cookie","confirm","deleted","datatable","$userList","filter","edit","model","label","sortable"],"mappings":"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","file":"controllers.min.js","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\n\ndefine('controller/entry',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/feedback'\n], function ($, _, __, feedback) {\n    'use strict';\n\n    /**\n     * The login controller\n     */\n    return {\n\n        /**\n         * Controller entry point\n         */\n        start: function start() {\n            var $container = $('#entry-point-box');\n            var errorMessage = $container.data('errormessage');\n            if (errorMessage) {\n                feedback().error(errorMessage);\n            }\n        }\n    };\n});\n","define('controller/Lock/locked',['jquery', 'i18n', 'helpers', 'lock', 'layout/section', 'ui/feedback'], \nfunction($, __, helpers, Lock, sectionApi, feedback){\n    'use strict';\n\t\n    return {\n        start : function(){\n\n\t\t    $(\".forcerelease\").click(function(e) {\n\t\t    \t\n\t\t        e.preventDefault();\n\t\t        \n\t\t        $.ajax({\n                    url: helpers._url('forceRelease', 'Lock', 'tao'),\n                    type: \"POST\",\n                    data : {uri : $(this).data('id')},\n                    dataType: 'json',\n                    success : function(response){\n                        if(response.success){\n        \t\t            feedback().success(__('The lock has been released'));\n                            $('.tree').trigger('refresh.taotree'); \n                        }\n                        else{\n        \t\t            feedback().error(__('Unable to release the lock'));\n                        }\n                    },\n                    error : function(){\n    \t\t            feedback().error(__('Unable to release the lock'));\n                    }\n                });\n\t\t        \n\t\t    });\n        }\n    }\n});\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/main',[\n    'module',\n    'jquery',\n    'i18n',\n    'context',\n    'helpers',\n    'uiForm',\n    'layout/section',\n    'layout/actions',\n    'layout/tree',\n    'layout/version-warning',\n    'layout/section-height',\n    'layout/loading-bar',\n    'layout/nav',\n    'layout/search'\n],\nfunction (module, $, __, context, helpers, uiForm, section, actions, treeFactory, versionWarning, sectionHeight, loadingBar, nav, search) {\n    'use strict';\n\n    /**\n     * This controller initialize all the layout components used by the backend : sections, actions, tree, loader, etc.\n     * @exports tao/controller/main\n     */\n    return {\n        start : function(){\n\n            var $doc = $(document);\n\n            versionWarning.init();\n\n            //just before an ajax request\n            $doc.ajaxSend(function () {\n                loadingBar.start();\n            });\n\n            //when an ajax request complete\n            $doc.ajaxComplete(function () {\n                loadingBar.stop();\n            });\n\n            //navigation bindings\n            nav.init();\n\n            //search component\n            search.init();\n\n            //initialize sections \n            section.on('activate', function(section){\n\n                window.scrollTo(0,0);\n\n                // quick work around issue in IE11\n                // IE randomly thinks there is no id and throws an error\n                // I know it's not logical but with this 'fix' everything works fine\n                if(!section || !section.id) {\n                    return;\n                }\n\n                context.section = section.id;\n               \n                //initialize actions \n                actions.init(section.panel);\n\n                switch(section.type){\n                case 'tree':\n                    section.panel.addClass('content-panel');\n                    sectionHeight.init(section.panel);\n\n                    //set up the tree\n                    $('.taotree', section.panel).each(function(){\n                        var $treeElt = $(this),\n                            $actionBar = $('.tree-action-bar-box', section.panel);\n\n                        var rootNode = $treeElt.data('rootnode');\n                        var treeUrl = context.root_url;\n                        var treeActions = {};\n                        $.each($treeElt.data('actions'), function (key, val) {\n                            if (actions.getBy(val)) {\n                                treeActions[key] = val;\n                            }\n                        });\n                        \n                        if(/\\/$/.test(treeUrl)){\n                            treeUrl += $treeElt.data('url').replace(/^\\//, '');\n                        } else {\n                            treeUrl += $treeElt.data('url');\n                        }\n                        treeFactory($treeElt, treeUrl, {\n                            serverParameters : {\n                                extension    : context.shownExtension,\n                                perspective  : context.shownStructure,\n                                section      : context.section,\n                                classUri     : rootNode ? rootNode : undefined\n                            },\n                            actions : treeActions\n                        });\n                        $treeElt.on('ready.taotree', function() {\n                            $actionBar.addClass('active');\n                            sectionHeight.setHeights(section.panel);\n                        });\n                    });\n\n                    $('.navi-container', section.panel).show();\n                    break;\n                case 'content' : \n\n                    //or load the content block\n                    this.loadContentBlock();\n                    \n                    break;\n                }\n            })\n            .init();\n\n\n            //initialize legacy components\n            helpers.init();\n            uiForm.init();\n        }\n    };\n});\n\n\n","/**  \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n * \n * Copyright (c) 2015 (original work) Open Assessment Technologies SA;\n *               \n */\n\n/**\n * Recovery password page controller\n * @author Aleh Hutnikau <hutnikau@1pt.com>\n */\ndefine('controller/passwordRecovery',[\n    'jquery',\n    'i18n',\n    'module',\n    'ui/feedback',\n    'layout/version-warning'\n], function ($, __, module, feedback,  versionWarning) {\n    'use strict';\n    var conf = module.config(),\n        feedbackType;\n\n    versionWarning.init();\n    if (conf.message) {\n        for (feedbackType in conf.message) {\n            if (conf.message[feedbackType]) {\n                feedback()[feedbackType](conf.message[feedbackType]);\n            }\n        }\n    }\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n * \n * \n */\n\n//@see http://forge.taotesting.com/projects/tao/wiki/Front_js\ndefine('controller/routes',[],function(){\n    'use strict';\n\n    return {\n        'Main': {\n            'actions' : {\n                'index' : 'controller/main',\n                'entry' : 'controller/entry',\n                'getSectionActions' : 'controller/main/actions',\n                'getSectionTrees' : 'controller/main/trees',\n                'login' : 'controller/login'\n            }\n        },\n        'PasswordRecovery': {\n            'actions' : {\n                'index' : 'controller/passwordRecovery'\n            },\n        },\n        'Lock': {\n            'actions' : {\n                'locked' : 'controller/Lock/locked'\n            }\n        },\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'Users' : {\n            'deps' : 'controller/users/disable-edit',\n            'actions' : {\n                'index' : 'controller/users/index',\n                'add'   : 'controller/users/add'\n            }\n        }\n    };\n});\n\n","define('controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers', 'ui/feedback'], function($, __, context, helpers, feedback){\n\n    var ext_installed = [];\n    var toInstall = [];\n    var indexCurrentToInstall = -1;\n    var percentByExt = 0;\n    var installError = 0;\n\n    function getDependencies(extension) {\n            var dependencies = [];\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\n                    var ext = $(this).attr('rel');\n                    var deps = getDependencies(ext);\n                    deps.push(ext);\n                    dependencies = dependencies.concat(deps);\n            });\n            return dependencies;\n    }\n\n    //Give an array with unique values\n    function getUnique(orig){\n            var a = [];\n            for (var i = 0; i < orig.length; i++) {\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\n            }\n            return a;\n    }\n\n    function progressConsole(msg) {\n            $('#installProgress .console').append('<p>' + msg + '</p>');\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\n    }\n\n    function installNextExtension() {\n            var ext = toInstall[indexCurrentToInstall];\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\n            $.ajax({\n                    type: \"POST\",\n                    url: helpers._url('install', 'ExtensionsManager', 'tao'),\n                    data: 'id='+ext,\n                    dataType: 'json',\n                    success: function(data) {\n                            helpers.loaded();\n                            if (data.success) {\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\n\n                                    // state that the extension is install in remaining dependencies.\n                                    $('li.ext-id.ext-' + ext).addClass('installed');\n\n                                    $('tr#'+ext).slideUp('normal', function() {\n                                            var $tr = $('<tr></tr>').appendTo($('#extensions-manager-container tbody')).hide();\n                                            var $orig = $('tr#' + ext + ' td');\n                                            $tr.append('<td class=\"ext-id bordered\">' + $($orig[0]).text() + '</td>');\n                                            $tr.append('<td class=\"author\">' + $($orig[1]).text() + '</td>');\n                                            $tr.append('<td class=\"version\">' + $($orig[2]).text() + '</td>');\n                                            $tr.slideDown('normal', function() {\n                                                    $('tr#' + ext).remove();\n\n                                                    // table changed, restyle.\n                                                    styleTables();\n\n                                                    // If the available extensions table is empty,\n                                                    // just inform the user.\n                                                    if ($('#available-extensions-container table tbody tr').length == 0){\n                                                            noAvailableExtensions();\n                                                    }\n\n                                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\n                                                            //Next\n                                                            indexCurrentToInstall++;\n                                                            hasNextExtensionToInstall();\n                                                    });\n                                            });\n                                    });\n                            } else {\n                                    installError = 1;\n                                    progressConsole('Installation of ' + ext + ' failed');\n                            }\n                            feedback().info(data.message);\n                    }\n            });\n\n            if (installError) {\n                    progressConsole(__('A fatal error occured during the installation process.'));\n            }\n    }\n\n    function postInstall(){\n        progressConsole(__('Post install processing'));\n        return $.ajax({\n            type: \"GET\",\n            url: helpers._url('postInstall', 'ExtensionsManager', 'tao')\n        });\n    }\n\n    function hasNextExtensionToInstall() {\n            if (indexCurrentToInstall >= toInstall.length) {\n                toInstall = [];\n                $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\n\n                postInstall().done(function(data) {\n                    helpers.loaded();\n                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\n                    $('#installProgress p.status').text(__('Installation done.'));\n                    progressConsole(__('> Installation done.'));\n                    progressConsole(__('... reloading page.'));\n\n                    setTimeout(function(){\n                        window.location.reload(true);\n                    }, 1000);\n                });\n            } else {\n                installNextExtension();\n            }\n    }\n\n    function styleTables(){\n            // Clean all to make this function able to \"restyle\" after\n            // data refresh.\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\n                                                                             .removeClass('extensionEven');\n\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\n    }\n\n    function noAvailableExtensions(){\n            var $noAvailableExtElement = $('<div/>');\n            $noAvailableExtElement.attr('id', 'noExtensions')\n                                                      .addClass('ui-state-highlight')\n                                                      .text(__('No extensions available.'));\n\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\n    }\n    \n    return {\n        start : function(){\n            \n            // Table styling.\n            styleTables();\n\n            $('#installProgress').hide();\n\n            //Detect wich extension is already installed\n            $('#extensions-manager-container .ext-id').each(function() {\n                    var ext = $(this).text();\n                    ext_installed.push(ext);\n                    $('.ext-id.ext-' + ext).addClass('installed');\n            });\n\n            $('#available-extensions-container tr input').click(function(event){\n                    event.stopPropagation();\n            });\n\n            $('#available-extensions-container tr input:checkbox').click(function() {\n                    var $installButton = $('#installButton');\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\n                            $installButton.attr('disabled', false);\n                    }\n                    else{\n                            $installButton.attr('disabled', true);\n                    }\n            });\n\n            $('#available-extensions-container #installButton').click(function(event) {\n                    //Prepare the list of extension to install in the order of dependency\n                    toInstall = [];\n                    $('#available-extensions-container input:checked').each(function() {\n                            var ext = $(this).prop('name').split('_')[1];\n                            var deps = getDependencies(ext);\n                            if (deps.length) {\n                                toInstall = toInstall.concat(deps);\n                            }\n                            toInstall.push(ext);\n                    });\n                    toInstall = getUnique(toInstall);\n                    if (!toInstall.length) {\n                            window.alert(__('Nothing to install !'));\n                            return false;\n                    }\n                    //Let's go\n                    percentByExt = 100 / toInstall.length;\n\n                    //Show the dialog with the result\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\n                    $('#installProgress .bar').width(0);\n                    $('#installProgress .console').empty();\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\n                    $('#installProgress').dialog({\n                            modal: true,\n                            width: 400,\n                            height: 300,\n                            buttons: [{\n                                text: __('No'),\n                                click: function() {\n                                        $(this).dialog('close');\n                                }\n                            },{\n                                    text: __('Yes'),\n                                    click: function() {\n                                            //Run the install one by one\n                                            progressConsole(__('Preparing installation...'));\n                                            $('.ui-dialog-buttonpane').remove();\n                                            installError = 0;\n                                            indexCurrentToInstall = 0;\n                                            installNextExtension();\n                                    }\n                                }]\n                    });\n                    event.preventDefault();\n            });\n        }\n    };\n\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/users/add',['jquery', 'module', 'helpers', 'users'], function($, module, helpers, users) {\n    'use strict';\n       \n    \n    /**\n     * The user add controller\n     * @exports controller/users/add\n     */    \n    return {\n        start : function(){\n            var conf = module.config();\n            var url  = helpers._url('checkLogin', 'Users', 'tao');\n            users.checkLogin(conf.loginId, url);\n            \n            if(conf.exit === true){\n\n                setTimeout(function(){\n                    //TODO would be better to clean up the form and switch the section\n                    window.location = helpers._url('index', 'Main', 'tao', {structure: 'users', ext : 'tao', section : 'list_users'});\n                }, 1000);\n            }\n        }\n    };\n});\n\n","/**\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/users/disable-edit',['layout/section'], function(section) {\n    'use strict';\n       \n    /**\n     * Ensure edit section is disabled\n     * @exports controller/users/disable-edit\n     */    \n    return {\n        start : function(){\n            section.get('edit_user').disable();\n        }\n    };\n});\n\n","/**\n * @author Jérôme Bogaert <jerome@taotesting.com>\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\ndefine('controller/users/index',['module', 'jquery', 'i18n', 'helpers', 'layout/section', 'ui/feedback', 'ui/datatable'], function(module, $, __, helpers, section, feedback) {\n    'use strict';\n\n    /**\n     * Edit a user (shows the edit section)\n     * @param {String} uri - the user uri\n     */\n    var editUser = function editUser(uri) {\n        section\n            .get('edit_user')\n            .enable()\n            .loadContentBlock(helpers._url('edit', 'Users', 'tao'), {uri : uri})\n            .show();\n    };\n\n    /**\n     * Removes a user\n     * @param {String} uri - the user uri\n     */\n    var removeUser = function removeUser(uri){\n        var tokenName = module.config().xsrfTokenName;\n        var data = {};\n\n        data.uri = uri;\n        data[tokenName] = $.cookie(tokenName);\n\n        //TODO use a confirm component\n        if (window.confirm(__('Please confirm user deletion'))) {\n            $.ajax({\n                url : helpers._url('delete', 'Users', 'tao'),\n                data : data,\n                type : 'POST'\n            }).done(function(response){\n                if(response.deleted){\n                    feedback().success(response.message);\n                } else {\n                    feedback().error(response.message);\n                }\n                $('#user-list').datatable('refresh');\n            });\n        }\n\t};\n\n    /**\n     * The user index controller\n     * @exports controller/users/index\n     */\n    return {\n        start : function(){\n            var $userList = $('#user-list');\n    \n            section.on('show', function(section){\n                if(section.id === 'list_users'){\n                    $userList.datatable('refresh');\n                }\n            });\n\n            //initialize the user manager component\n            $userList.datatable({\n                url: helpers._url('data', 'Users', 'tao'),\n                filter: true,\n                actions: {\n                    'edit': editUser,\n                    'remove': removeUser\n                },\n                'model': [\n                    {\n                        id : 'login',\n                        label : __('Login'),\n                        sortable : true\n                    },{\n                        id : 'firstname',\n                        label : __('First Name'),\n                        sortable : true\n                    },{\n                        id : 'lastname',\n                        label : __('Last Name'),\n                        sortable : true\n                    },{\n                        id : 'email',\n                        label : __('Email'),\n                        sortable : true\n                    },{\n                        id : 'roles',\n                        label : __('Roles'),\n                        sortable : false\n                    },{\n                        id : 'dataLg',\n                        label : __('Data Language'),\n                        sortable : true\n                    },{\n                        id: 'guiLg',\n                        label : __('Interface Language'),\n                        sortable : true\n                    }\n                ]\n            });\n        }\n    };\n});\n\n"]}